{"version":3,"sources":["flowers.js","flowerUtils.ts","tableUtils.tsx","OffspringTable.tsx","Bubble.tsx","Scenario.tsx","GenomeFormatSelector.tsx","SpeciesSelect.tsx","Calculator.tsx","Lookup.tsx","App.tsx","serviceWorker.js","index.js"],"names":["memoGeneCombos","numeral_map","0","1","2","rpair","ypair","wpair","spair","rys","ryw","alphaAlleles","rose","cosmos","lily","pansy","tulip","hyacinth","mum","windflower","flowers","data","split_binary","condensed","words","getOffspringData","species","genome","colorData","colorString","color","seed","island","getColorString","backgroundColor","bgColors","colorDisplayString","getColorData","condensedGenome","split","map","allele","reduce","a","b","parseInt","toString","join","getCondensedGenome","alphaGenome","pairs","alphas","pair","idx","digit","sort","getAlphaGenome","parseGenomeSet","genomeSet","genomes","splitGenes","forEach","rawGenome","trim","split_match","exec","push","condensed_match","numeral","parts","toLowerCase","variant","variant_genome","pickGenomeString","offspring","format","possibleGenomes","parent1","parent2","splitGenes1","splitGenes2","childGenomesPerParents","genome1","genome2","allelesForEachGene","i","length","geneCombo","possibleChildGenomes","createPossibleGenomeList","possibilities","heads","shift","genomeTails","combinedGenes","j","res","Object","keys","parentCombo","result","parents","genomeOccurrences","genomeCount","childGenome","dedupedGenome","offspringData","probability","descendingComparator","orderBy","useStyles","makeStyles","theme","createStyles","offspringChip","width","border","root","paper","marginBottom","spacing","table","minWidth","visuallyHidden","clip","height","margin","overflow","padding","position","top","EnhancedTableHead","props","classes","order","onRequestSort","showProbability","headCells","sortKey","numeric","disablePadding","label","TableHead","TableRow","headCell","TableCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","hideSortIcon","className","OffspringTable","genomeFormat","React","useState","setOrder","setOrderBy","Table","size","_event","TableBody","array","comparator","stabilizedThis","el","index","stableSort","getComparator","possibleOffspring","Chip","style","Typography","Bubble","resultsTable","name","Scenario","parent1Data","parent2Data","formControl","selectEmpty","marginTop","GenomeFormatSelector","setGenomeFormat","FormControl","InputLabel","shrink","id","Select","labelId","value","onChange","e","target","displayEmpty","MenuItem","speciesList","SpeciesSelect","setSpecies","Calculator","setParent1","setParent2","setRes","noValidate","autoComplete","Grid","container","alignContent","justify","item","xs","xl","sm","TextField","helperText","Button","disabled","alignItems","md","component","flowerData","Lookup","setColor","allGenomes","Card","CardHeader","title","CardContent","createMuiTheme","typography","fontFamily","TabPanel","children","other","role","hidden","aria-labelledby","App","setValue","a11yProps","href","rel","type","ThemeProvider","AppBar","Tabs","newValue","indicatorColor","textColor","scrollButtons","aria-label","Tab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f336f669.chunk.js","sourcesContent":["export default { flowers:{\"hyacinth\":{\"island\":{\"orange\":\"01_11_00\",\"pink\":\"01_00_01\",\"blue\":\"11_01_00\"},\"seed\":{\"white\":\"00_00_01\",\"yellow\":\"00_11_00\",\"red\":\"11_00_01\"},\"genomes\":{\"01_01_01\":{\"color\":\"yellow\"},\"01_00_01\":{\"color\":\"pink\",\"island\":1},\"01_01_11\":{\"color\":\"yellow\"},\"01_00_11\":{\"color\":\"white\"},\"01_11_01\":{\"color\":\"yellow\"},\"01_11_11\":{\"color\":\"yellow\"},\"11_01_00\":{\"island\":1,\"color\":\"blue\"},\"11_00_00\":{\"color\":\"red\"},\"00_11_00\":{\"seed\":1,\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"yellow\"},\"11_11_00\":{\"color\":\"purple\"},\"01_01_00\":{\"color\":\"orange\"},\"01_00_00\":{\"color\":\"red\"},\"01_11_00\":{\"color\":\"orange\",\"island\":1},\"11_01_11\":{\"color\":\"red\"},\"11_00_11\":{\"color\":\"red\"},\"11_00_01\":{\"seed\":1,\"color\":\"red\"},\"11_01_01\":{\"color\":\"red\"},\"00_11_11\":{\"color\":\"yellow\"},\"00_11_01\":{\"color\":\"yellow\"},\"00_01_11\":{\"color\":\"white\"},\"00_00_11\":{\"color\":\"blue\"},\"00_01_01\":{\"color\":\"yellow\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"11_11_11\":{\"color\":\"purple\"},\"11_11_01\":{\"color\":\"purple\"}},\"colors\":[\"blue\",\"orange\",\"pink\",\"purple\",\"red\",\"white\",\"yellow\"]},\"windflower\":{\"colors\":[\"blue\",\"orange\",\"pink\",\"purple\",\"red\",\"white\"],\"island\":{\"blue\":\"01_00_11\",\"pink\":\"11_11_01\"},\"seed\":{\"white\":\"00_00_01\",\"orange\":\"00_11_00\",\"red\":\"11_00_00\"},\"genomes\":{\"01_11_00\":{\"color\":\"orange\"},\"01_00_00\":{\"color\":\"red\"},\"01_01_00\":{\"color\":\"pink\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"00_01_01\":{\"color\":\"orange\"},\"00_00_11\":{\"color\":\"blue\"},\"00_01_11\":{\"color\":\"blue\"},\"11_11_01\":{\"island\":1,\"color\":\"pink\"},\"11_11_11\":{\"color\":\"purple\"},\"11_01_01\":{\"color\":\"red\"},\"11_00_01\":{\"color\":\"red\"},\"11_00_11\":{\"color\":\"purple\"},\"11_01_11\":{\"color\":\"purple\"},\"00_11_01\":{\"color\":\"orange\"},\"00_11_11\":{\"color\":\"orange\"},\"01_11_11\":{\"color\":\"orange\"},\"01_11_01\":{\"color\":\"orange\"},\"01_00_11\":{\"color\":\"blue\",\"island\":1},\"01_01_11\":{\"color\":\"pink\"},\"01_00_01\":{\"color\":\"red\"},\"01_01_01\":{\"color\":\"pink\"},\"00_00_00\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"orange\"},\"11_11_00\":{\"color\":\"pink\"},\"11_01_00\":{\"color\":\"red\"},\"11_00_00\":{\"seed\":1,\"color\":\"red\"},\"00_11_00\":{\"color\":\"orange\",\"seed\":1}}},\"cosmos\":{\"island\":{\"orange\":\"11_01_01\",\"pink\":\"01_01_11\"},\"seed\":{\"white\":\"00_00_01\",\"yellow\":\"00_11_01\",\"red\":\"11_00_00\"},\"genomes\":{\"01_00_01\":{\"color\":\"pink\"},\"01_01_01\":{\"color\":\"orange\"},\"01_01_11\":{\"island\":1,\"color\":\"pink\"},\"01_00_11\":{\"color\":\"pink\"},\"01_11_01\":{\"color\":\"orange\"},\"01_11_11\":{\"color\":\"orange\"},\"11_00_00\":{\"color\":\"red\",\"seed\":1},\"11_01_00\":{\"color\":\"orange\"},\"00_11_00\":{\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"yellow\"},\"11_11_00\":{\"color\":\"black\"},\"01_00_00\":{\"color\":\"pink\"},\"01_01_00\":{\"color\":\"orange\"},\"01_11_00\":{\"color\":\"orange\"},\"11_00_11\":{\"color\":\"red\"},\"11_01_11\":{\"color\":\"red\"},\"11_01_01\":{\"island\":1,\"color\":\"orange\"},\"11_00_01\":{\"color\":\"red\"},\"00_11_11\":{\"color\":\"yellow\"},\"00_11_01\":{\"seed\":1,\"color\":\"yellow\"},\"00_01_11\":{\"color\":\"white\"},\"00_00_11\":{\"color\":\"white\"},\"00_00_01\":{\"seed\":1,\"color\":\"white\"},\"00_01_01\":{\"color\":\"yellow\"},\"11_11_11\":{\"color\":\"red\"},\"11_11_01\":{\"color\":\"black\"}},\"colors\":[\"black\",\"orange\",\"pink\",\"red\",\"white\",\"yellow\"]},\"pansy\":{\"colors\":[\"blue\",\"orange\",\"purple\",\"red\",\"white\",\"yellow\"],\"seed\":{\"red\":\"11_00_00\",\"yellow\":\"00_11_00\",\"white\":\"00_00_01\"},\"island\":{\"orange\":\"11_11_01\",\"blue\":\"01_00_11\"},\"genomes\":{\"11_01_00\":{\"color\":\"red\"},\"11_00_00\":{\"seed\":1,\"color\":\"red\"},\"00_11_00\":{\"seed\":1,\"color\":\"yellow\"},\"00_01_00\":{\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"11_11_00\":{\"color\":\"orange\"},\"01_01_01\":{\"color\":\"orange\"},\"01_00_01\":{\"color\":\"red\"},\"01_00_11\":{\"island\":1,\"color\":\"blue\"},\"01_01_11\":{\"color\":\"orange\"},\"01_11_01\":{\"color\":\"yellow\"},\"01_11_11\":{\"color\":\"yellow\"},\"11_00_11\":{\"color\":\"purple\"},\"11_01_11\":{\"color\":\"purple\"},\"11_01_01\":{\"color\":\"red\"},\"11_00_01\":{\"color\":\"red\"},\"00_11_11\":{\"color\":\"yellow\"},\"00_11_01\":{\"color\":\"yellow\"},\"00_00_11\":{\"color\":\"blue\"},\"00_01_11\":{\"color\":\"blue\"},\"00_01_01\":{\"color\":\"yellow\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"11_11_11\":{\"color\":\"purple\"},\"11_11_01\":{\"color\":\"orange\",\"island\":1},\"01_00_00\":{\"color\":\"red\"},\"01_01_00\":{\"color\":\"orange\"},\"01_11_00\":{\"color\":\"yellow\"}}},\"lily\":{\"colors\":[\"black\",\"orange\",\"pink\",\"red\",\"white\",\"yellow\"],\"seed\":{\"yellow\":\"00_11_00\",\"white\":\"00_00_11\",\"red\":\"11_00_01\"},\"island\":{\"orange\":\"11_11_01\",\"black\":\"11_01_00\",\"pink\":\"11_01_11\"},\"genomes\":{\"01_11_00\":{\"color\":\"orange\"},\"01_01_00\":{\"color\":\"orange\"},\"01_00_00\":{\"color\":\"red\"},\"00_00_11\":{\"color\":\"white\",\"seed\":1},\"00_01_11\":{\"color\":\"white\"},\"00_00_01\":{\"color\":\"white\"},\"00_01_01\":{\"color\":\"white\"},\"11_11_11\":{\"color\":\"white\"},\"11_11_01\":{\"color\":\"orange\",\"island\":1},\"11_01_11\":{\"color\":\"pink\",\"island\":1},\"11_00_11\":{\"color\":\"pink\"},\"11_01_01\":{\"color\":\"red\"},\"11_00_01\":{\"seed\":1,\"color\":\"red\"},\"00_11_11\":{\"color\":\"white\"},\"00_11_01\":{\"color\":\"yellow\"},\"01_11_01\":{\"color\":\"yellow\"},\"01_11_11\":{\"color\":\"yellow\"},\"01_01_01\":{\"color\":\"yellow\"},\"01_00_01\":{\"color\":\"pink\"},\"01_01_11\":{\"color\":\"yellow\"},\"01_00_11\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"11_11_00\":{\"color\":\"orange\"},\"11_01_00\":{\"island\":1,\"color\":\"black\"},\"11_00_00\":{\"color\":\"black\"},\"00_11_00\":{\"seed\":1,\"color\":\"yellow\"}}},\"tulip\":{\"colors\":[\"black\",\"orange\",\"pink\",\"purple\",\"red\",\"white\",\"yellow\"],\"island\":{\"black\":\"11_01_00\",\"orange\":\"01_11_00\",\"pink\":\"01_00_01\"},\"genomes\":{\"00_11_11\":{\"color\":\"yellow\"},\"00_11_01\":{\"color\":\"yellow\"},\"11_00_11\":{\"color\":\"red\"},\"11_01_11\":{\"color\":\"red\"},\"11_00_01\":{\"seed\":1,\"color\":\"red\"},\"11_01_01\":{\"color\":\"red\"},\"11_11_11\":{\"color\":\"purple\"},\"11_11_01\":{\"color\":\"purple\"},\"00_00_11\":{\"color\":\"white\"},\"00_01_11\":{\"color\":\"white\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"00_01_01\":{\"color\":\"yellow\"},\"01_00_00\":{\"color\":\"red\"},\"01_01_00\":{\"color\":\"orange\"},\"01_11_00\":{\"island\":1,\"color\":\"orange\"},\"00_11_00\":{\"color\":\"yellow\",\"seed\":1},\"11_01_00\":{\"color\":\"black\",\"island\":1},\"11_00_00\":{\"color\":\"black\"},\"11_11_00\":{\"color\":\"purple\"},\"00_00_00\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"yellow\"},\"01_01_01\":{\"color\":\"yellow\"},\"01_00_01\":{\"island\":1,\"color\":\"pink\"},\"01_00_11\":{\"color\":\"white\"},\"01_01_11\":{\"color\":\"yellow\"},\"01_11_01\":{\"color\":\"yellow\"},\"01_11_11\":{\"color\":\"yellow\"}},\"seed\":{\"red\":\"11_00_01\",\"yellow\":\"00_11_00\",\"white\":\"00_00_01\"}},\"rose\":{\"island\":{\"pink\":\"11_00_11_11\",\"orange\":\"11_11_01_01\"},\"seed\":{\"white\":\"00_00_01_00\",\"yellow\":\"00_11_00_00\",\"red\":\"11_00_00_01\"},\"genomes\":{\"00_01_11_11\":{\"color\":\"purple\"},\"00_00_01_11\":{\"color\":\"white\"},\"00_00_00_00\":{\"color\":\"white\"},\"01_11_11_01\":{\"color\":\"pink\"},\"11_11_11_11\":{\"color\":\"white\"},\"11_00_11_11\":{\"color\":\"pink\",\"island\":1},\"00_11_00_00\":{\"seed\":1,\"color\":\"yellow\"},\"01_00_11_01\":{\"color\":\"pink\"},\"01_01_01_01\":{\"color\":\"pink\"},\"11_01_01_11\":{\"color\":\"white\"},\"11_01_00_00\":{\"color\":\"orange\"},\"00_11_01_11\":{\"color\":\"yellow\"},\"01_11_01_00\":{\"color\":\"orange\"},\"00_01_00_01\":{\"color\":\"yellow\"},\"11_11_00_01\":{\"color\":\"orange\"},\"01_11_00_11\":{\"color\":\"yellow\"},\"01_00_00_11\":{\"color\":\"white\"},\"11_00_00_01\":{\"seed\":1,\"color\":\"red\"},\"01_00_01_00\":{\"color\":\"red\"},\"01_01_11_00\":{\"color\":\"red\"},\"00_00_00_11\":{\"color\":\"white\"},\"11_11_11_00\":{\"color\":\"blue\"},\"00_01_11_00\":{\"color\":\"purple\"},\"00_00_01_00\":{\"seed\":1,\"color\":\"white\"},\"01_01_00_01\":{\"color\":\"yellow\"},\"11_01_00_11\":{\"color\":\"yellow\"},\"00_11_01_00\":{\"color\":\"yellow\"},\"11_00_11_00\":{\"color\":\"black\"},\"00_11_00_11\":{\"color\":\"yellow\"},\"11_01_01_00\":{\"color\":\"red\"},\"00_01_01_01\":{\"color\":\"white\"},\"01_11_00_00\":{\"color\":\"orange\"},\"00_00_11_01\":{\"color\":\"purple\"},\"11_11_01_01\":{\"island\":1,\"color\":\"orange\"},\"01_11_01_11\":{\"color\":\"yellow\"},\"01_00_01_11\":{\"color\":\"white\"},\"11_00_01_01\":{\"color\":\"red\"},\"11_01_11_01\":{\"color\":\"red\"},\"01_01_11_11\":{\"color\":\"purple\"},\"00_11_11_01\":{\"color\":\"white\"},\"01_00_00_00\":{\"color\":\"red\"},\"11_11_00_00\":{\"color\":\"orange\"},\"00_00_11_11\":{\"color\":\"purple\"},\"00_01_01_11\":{\"color\":\"white\"},\"00_01_00_00\":{\"color\":\"yellow\"},\"11_11_01_11\":{\"color\":\"yellow\"},\"01_11_01_01\":{\"color\":\"yellow\"},\"11_01_11_11\":{\"color\":\"purple\"},\"01_01_11_01\":{\"color\":\"pink\"},\"01_00_01_01\":{\"color\":\"pink\"},\"11_00_01_11\":{\"color\":\"pink\"},\"00_11_11_11\":{\"color\":\"white\"},\"11_00_00_00\":{\"color\":\"black\"},\"00_00_00_01\":{\"color\":\"white\"},\"01_11_11_00\":{\"color\":\"red\"},\"01_01_00_11\":{\"color\":\"yellow\"},\"11_01_00_01\":{\"color\":\"orange\"},\"01_01_01_00\":{\"color\":\"red\"},\"01_00_11_00\":{\"color\":\"red\"},\"00_11_00_01\":{\"color\":\"yellow\"},\"00_01_00_11\":{\"color\":\"yellow\"},\"11_11_01_00\":{\"color\":\"orange\"},\"11_11_00_11\":{\"color\":\"yellow\"},\"01_11_00_01\":{\"color\":\"yellow\"},\"00_00_11_00\":{\"color\":\"purple\"},\"00_01_01_00\":{\"color\":\"white\"},\"01_00_00_01\":{\"color\":\"pink\"},\"00_11_11_00\":{\"color\":\"white\"},\"11_00_00_11\":{\"color\":\"pink\"},\"11_01_11_00\":{\"color\":\"black\"},\"11_00_01_00\":{\"color\":\"black\"},\"00_00_01_01\":{\"color\":\"white\"},\"00_01_11_01\":{\"color\":\"purple\"},\"01_11_11_11\":{\"color\":\"white\"},\"11_11_11_01\":{\"color\":\"red\"},\"01_01_01_11\":{\"color\":\"white\"},\"11_01_01_01\":{\"color\":\"red\"},\"11_00_11_01\":{\"color\":\"red\"},\"01_00_11_11\":{\"color\":\"purple\"},\"00_11_01_01\":{\"color\":\"yellow\"},\"01_01_00_00\":{\"color\":\"orange\"}},\"colors\":[\"black\",\"blue\",\"orange\",\"pink\",\"purple\",\"red\",\"white\",\"yellow\"]},\"mum\":{\"colors\":[\"green\",\"pink\",\"purple\",\"red\",\"white\",\"yellow\"],\"seed\":{\"red\":\"11_00_00\",\"white\":\"00_00_01\",\"yellow\":\"00_11_00\"},\"island\":{\"pink\":\"01_01_11\",\"purple\":\"11_01_01\"},\"genomes\":{\"11_11_01\":{\"color\":\"green\"},\"11_11_11\":{\"color\":\"red\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"00_01_01\":{\"color\":\"yellow\"},\"00_01_11\":{\"color\":\"white\"},\"00_00_11\":{\"color\":\"purple\"},\"00_11_01\":{\"color\":\"yellow\"},\"00_11_11\":{\"color\":\"yellow\"},\"11_00_01\":{\"color\":\"red\"},\"11_01_01\":{\"color\":\"purple\",\"island\":1},\"11_00_11\":{\"color\":\"red\"},\"11_01_11\":{\"color\":\"red\"},\"01_11_00\":{\"color\":\"purple\"},\"01_01_00\":{\"color\":\"yellow\"},\"01_00_00\":{\"color\":\"pink\"},\"11_11_00\":{\"color\":\"green\"},\"00_01_00\":{\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"00_11_00\":{\"color\":\"yellow\",\"seed\":1},\"11_01_00\":{\"color\":\"purple\"},\"11_00_00\":{\"color\":\"red\",\"seed\":1},\"01_11_11\":{\"color\":\"purple\"},\"01_11_01\":{\"color\":\"purple\"},\"01_01_11\":{\"island\":1,\"color\":\"pink\"},\"01_00_11\":{\"color\":\"pink\"},\"01_01_01\":{\"color\":\"red\"},\"01_00_01\":{\"color\":\"pink\"}}}}}","import * as data from './flowers';\r\nimport { Species, GenomeData, Offspring, Pairing, Color, VariantMap, PartialOffspring, GenomeFormat } from './types';\r\nconst memoGeneCombos: {[key: string]: string[]} = {\r\n  '0000': ['00'],\r\n  '0001': ['00', '01'],\r\n  '0011': ['01'],\r\n  '0100': ['00', '01'],\r\n  '0101': ['00', '01', '01', '11'],\r\n  '0111': ['01', '11'],\r\n  '1100': ['01'],\r\n  '1101': ['01', '11'],\r\n  '1111': ['11']\r\n};\r\n\r\nconst numeral_map: {[key: number] : string} = {\r\n  0: '00',\r\n  1: '01',\r\n  2: '11'\r\n}\r\n\r\nconst rpair = ['r', 'R'];\r\nconst ypair = ['y','Y'];\r\nconst wpair = ['W','w'];\r\nconst spair = ['s','S'];\r\nconst rys = [rpair, ypair, spair];\r\nconst ryw = [rpair,ypair,wpair];\r\nconst alphaAlleles: {[key in Species]: string[][]} = {\r\n  rose: [ rpair, ypair, wpair, spair],\r\n  cosmos: [rpair, ypair, spair],\r\n  lily: rys,\r\n  pansy:ryw,\r\n  tulip: rys,\r\n  hyacinth:ryw,\r\n  mum:ryw,\r\n  windflower:[rpair, ['o', 'O'], wpair]\r\n}\r\n\r\nconst flowers = data.default.flowers;\r\nconst split_binary = /(?:[01]{2}(\\S)){2,3}[01]{2}/;\r\nconst condensed = /[\\d]{3,4}/;\r\nconst words = /(seed|island) (red|pink|yellow|orange|black|blue|purple|white)/i;\r\n\r\nexport function getColorData(species: Species, genome: string): PartialOffspring {\r\n  const genomeData: GenomeData = flowers[species]['genomes'] as GenomeData;\r\n  const data = genomeData[genome];\r\n  const colorString = getColorString(data);\r\n  const colorData = {\r\n    species,\r\n    genome,\r\n    backgroundColor: bgColors[data.color],\r\n    colorDisplayString: colorString,\r\n    color: data.color,\r\n  };\r\n  return colorData;\r\n}\r\n\r\nexport function getColorString({color, seed, island} : {color: Color, seed? : number, island?: number}): string {\r\n  let colorString = color;\r\n  if (island) {\r\n    colorString += \" (island)\";\r\n  }\r\n  else if (seed) {\r\n    colorString += \" (seed)\";\r\n  }\r\n  return colorString;\r\n}\r\n\r\nexport function getAlphaGenome(species: Species, genome: string): string {\r\n  const pairs = genome.split('_');\r\n  const alphas = alphaAlleles[species];\r\n  return pairs.map((pair, idx) => {\r\n    return pair.split('').map(digit => {\r\n      return alphas[idx][parseInt(digit,2)]\r\n    }).sort().join('');\r\n  }).join('-');\r\n  \r\n}\r\n\r\nexport function getOffspringData(species: Species, genome: string): Offspring {\r\n  const colorData = getColorData(species, genome);\r\n  const condensedGenome = getCondensedGenome(genome);\r\n  const alphaGenome = getAlphaGenome(species, genome);\r\n  return {\r\n    genome,\r\n    alphaGenome,\r\n    condensedGenome,\r\n    species,\r\n    ...colorData\r\n  } as Offspring;\r\n}\r\n\r\nconst bgColors = {\r\n  \"black\": '#666',\r\n  \"blue\": '#36f',\r\n  \"orange\": '#f93',\r\n  \"red\": \"#f33\",\r\n  \"yellow\": \"#ff3\",\r\n  \"purple\": \"#63f\",\r\n  \"green\": \"#9c0\",\r\n  \"pink\": \"#f9f\",\r\n  \"white\": \"#fff\",\r\n}\r\n\r\n\r\nfunction parseGenomeSet(genomeSet: string, species: Species) {\r\n  const genomes = genomeSet.split(',');\r\n  let splitGenes = [] as string[][];\r\n  genomes.forEach(rawGenome => {\r\n    const genome = rawGenome.trim();\r\n    const split_match = split_binary.exec(genome);\r\n    if (split_match && split_match[1]) {\r\n      splitGenes.push(genome.split(split_match[1]));\r\n    }\r\n    const condensed_match = condensed.exec(genome);\r\n    if (!split_match && condensed_match && condensed_match[0]) {\r\n      splitGenes.push(genome.split('').map((numeral: string): string => numeral_map[parseInt(numeral,3)]));\r\n    }\r\n    const word_match = words.exec(genome);\r\n    if (word_match) {\r\n      const parts = genome.toLowerCase().split(' ');\r\n      const variant = parts[0];\r\n      const color = parts[1];\r\n      const variantData: VariantMap = flowers[species][variant as 'seed'|'island'];\r\n      const variant_genome = variantData[color];\r\n      splitGenes.push(variant_genome.split('_'));\r\n    }\r\n  });\r\n  return splitGenes;\r\n}\r\n\r\nexport function pickGenomeString(offspring: Offspring, format: GenomeFormat): string {\r\n  switch(format) {\r\n    case 'binary':\r\n      return offspring.genome;\r\n    case 'condensed':\r\n      return offspring.condensedGenome;\r\n    case 'alpha':\r\n      return offspring.alphaGenome;\r\n    default:\r\n      return '';\r\n\r\n  }\r\n}\r\n\r\nexport function possibleGenomes(parent1: string, parent2: string, species: Species): Pairing[] {\r\n  // if (parent1 === '') {\r\n  //   return parent2;\r\n  // }\r\n  // if (parent2 === '') {\r\n  //   return parent1;\r\n  // }\r\n  // Split up the parents into their possible genes\r\n  const splitGenes1 = parseGenomeSet(parent1, species);\r\n  const splitGenes2 = parseGenomeSet(parent2, species);\r\n\r\n  // Combine the possible genes of the parents\r\n  let childGenomesPerParents: {[key: string]: string[]} = {};\r\n  splitGenes1.forEach(genome1 => {\r\n    splitGenes2.forEach(genome2 => {\r\n      let allelesForEachGene = [];\r\n      for (let i = 0; i < genome1.length; i++) {\r\n        const geneCombo = genome1[i] + genome2[i];\r\n        allelesForEachGene.push(memoGeneCombos[geneCombo]);\r\n      }\r\n      let possibleChildGenomes = createPossibleGenomeList(allelesForEachGene);\r\n      childGenomesPerParents[genome1.join('_') + ',' + genome2.join('_')] = possibleChildGenomes;\r\n    })\r\n  });\r\n  // Massage the data to be displayed in the sheet.\r\n  let res = [] as Pairing[];\r\n  Object.keys(childGenomesPerParents).forEach(parentCombo => {\r\n    let result = {} as Pairing;\r\n    let parents = parentCombo.split(',');\r\n    result.parents = parents;\r\n    result.offspring = [];\r\n    let genomeOccurrences: {[key: string]: number} = {};\r\n    let genomeCount = 0;\r\n    childGenomesPerParents[parentCombo].forEach(childGenome => {\r\n      genomeOccurrences[childGenome] = genomeOccurrences[childGenome] ? genomeOccurrences[childGenome] + 1 : 1;\r\n      genomeCount++;\r\n    });\r\n    Object.keys(genomeOccurrences).sort().forEach(dedupedGenome => {\r\n      const offspringData = getOffspringData(species, dedupedGenome)\r\n      result.offspring.push({\r\n        probability: genomeOccurrences[dedupedGenome] / genomeCount,\r\n        ...offspringData\r\n      });\r\n    });\r\n    res.push(result);\r\n  });\r\n  return res;\r\n}\r\n\r\nexport function getCondensedGenome(genome: string): string {\r\n  return genome.split('_').map(allele => { return allele.split('').reduce((a: string, b: string) => { return (parseInt(a, 2) + parseInt(b, 2)).toString() }) }).join('');\r\n}\r\n\r\nexport function createPossibleGenomeList(possibilities: string[][]): string[] {\r\n  if (possibilities.length === 1) {\r\n    return possibilities[0]\r\n  }\r\n  const heads = possibilities.shift();\r\n  const genomeTails = createPossibleGenomeList(possibilities);\r\n  let combinedGenes = [];\r\n  for (let i = 0; i < heads!.length; i++) {\r\n    for (let j = 0; j < genomeTails.length; j++) {\r\n      combinedGenes.push(heads![i] + '_' + genomeTails[j]);\r\n    }\r\n  }\r\n  return combinedGenes;\r\n}\r\n\r\n","import { Order } from './types';\r\n\r\n// all below from material-ui reference\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport function getComparator<Key extends keyof any>(order: Order, orderBy: Key): (a: {\r\n    [key in Key]: number | string;\r\n}, b: {\r\n    [key in Key]: number | string;\r\n}) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nexport function stableSort<T>(array: T[], comparator: (a: T, b: T) => number): T[] {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0)\r\n            return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n","import React from 'react';\r\nimport { TableHead, TableRow, TableCell, TableSortLabel, makeStyles, createStyles, Theme, Table, TableBody, Chip, Typography } from '@material-ui/core';\r\nimport { Offspring, Order, GenomeFormat } from './types';\r\nimport { stableSort, getComparator } from './tableUtils';\r\nimport { pickGenomeString } from './flowerUtils';\r\ntype SortableKey = \"genome\" | \"probability\" | \"colorDisplayString\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    offspringChip: {\r\n      width: '100%',\r\n      border: '1px solid black'\r\n    },\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }),\r\n);\r\ninterface HeadCell {\r\n  disablePadding: boolean;\r\n  sortKey: SortableKey;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\n\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: SortableKey) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  showProbability?: boolean;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, order, orderBy, onRequestSort, showProbability = true } = props;\r\n  const createSortHandler = (property: SortableKey) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  const headCells: HeadCell[] = [\r\n    { sortKey: 'genome', numeric: false, disablePadding: true, label: 'Genome' },\r\n    { sortKey: 'colorDisplayString', numeric: false, disablePadding: false, label: 'Color' },\r\n    ...(showProbability ? [{ sortKey: 'probability' as SortableKey, numeric: true, disablePadding: false, label: 'Probability' }] : []),\r\n  ];\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.sortKey}\r\n            align='center'\r\n            padding='none'\r\n            sortDirection={orderBy === headCell.sortKey ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.sortKey}\r\n              direction={orderBy === headCell.sortKey ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.sortKey)}\r\n              hideSortIcon={true}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.sortKey ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport interface OffspringTableProps {\r\n  offspring: Offspring[],\r\n  genomeFormat: GenomeFormat,\r\n  showProbability?: boolean\r\n}\r\n\r\nexport const OffspringTable = ({ offspring, genomeFormat, showProbability = true }: OffspringTableProps) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<SortableKey>('genome');\r\n  const handleRequestSort = (_event: React.MouseEvent<unknown>, property: SortableKey) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  return (\r\n    <Table size='small' padding='none'>\r\n      <EnhancedTableHead\r\n        classes={classes}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        onRequestSort={handleRequestSort}\r\n        showProbability={showProbability}\r\n      />\r\n      <TableBody>\r\n        {\r\n          stableSort(offspring, getComparator(order, orderBy)).map((possibleOffspring: Offspring) => {\r\n            return <TableRow key={possibleOffspring.genome}>\r\n              <TableCell align='center'>{pickGenomeString(possibleOffspring, genomeFormat)}</TableCell>\r\n              <TableCell align='center'>\r\n                <Chip style={{ backgroundColor: possibleOffspring.backgroundColor }} className={classes.offspringChip} label={<Typography variant='subtitle2'>{possibleOffspring.colorDisplayString}</Typography>} />\r\n              </TableCell>\r\n              {showProbability && <TableCell align='center'>{possibleOffspring.probability * 100 + '%'}</TableCell>}\r\n            </TableRow>\r\n          })}\r\n      </TableBody>\r\n\r\n    </Table>\r\n  );\r\n}","import React from 'react';\r\nimport { Offspring, GenomeFormat } from './types';\r\nimport { pickGenomeString } from './flowerUtils';\r\n\r\ninterface ResultsBubbleProps {\r\n  parent1: Offspring;\r\n  parent2: Offspring;\r\n  resultsTable: React.ReactElement;\r\n  genomeFormat: GenomeFormat;\r\n}\r\nexport const Bubble = ({ parent1, parent2, resultsTable, genomeFormat }: ResultsBubbleProps) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dialogue-character-wrap\">\r\n\r\n\r\n        <div className=\"dialogue-character dialogue-parent1\" style={{ backgroundColor: parent1.backgroundColor }}>\r\n          <slot name=\"character\">{pickGenomeString(parent1, genomeFormat)}</slot>\r\n        </div>\r\n\r\n        <div className=\"dialogue-character dialogue-parent2\" style={{ backgroundColor: parent2.backgroundColor }}>\r\n          <slot name=\"character\">{pickGenomeString(parent2, genomeFormat)}</slot>\r\n        </div>\r\n      </div>\r\n      <div className=\"dialogue\">\r\n        <div className=\"dialogue-text\">{resultsTable}</div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Bubble;\r\n","import React from 'react';\r\nimport { getOffspringData } from './flowerUtils';\r\nimport { OffspringTable } from './OffspringTable';\r\nimport { Pairing } from './types';\r\nimport { Bubble } from './Bubble';\r\n\r\nexport const Scenario = ({ parents, offspring, species, genomeFormat }: Pairing) => {\r\n  const parent1Data = getOffspringData(species, parents[0]);\r\n  const parent2Data = getOffspringData(species, parents[1]);\r\n  return (\r\n    <Bubble\r\n      parent1={parent1Data}\r\n      parent2={parent2Data}\r\n      resultsTable={<OffspringTable offspring={offspring} genomeFormat={genomeFormat} />}\r\n      genomeFormat={genomeFormat}\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport { FormControl, makeStyles, createStyles, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { GenomeFormat } from './types';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\ninterface GenomeFormatSelectorProps {\r\n  genomeFormat: GenomeFormat;\r\n  setGenomeFormat: (arg0: GenomeFormat) => void;\r\n}\r\n\r\nexport const GenomeFormatSelector = ({genomeFormat, setGenomeFormat} : GenomeFormatSelectorProps ) => {\r\n  const classes = useStyles();\r\n;\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink id=\"format-select-label\">\r\n          Display Format\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"species-select-label\"\r\n          id=\"species-select\"\r\n          value={genomeFormat}\r\n          onChange={(e: React.ChangeEvent<{ value: unknown }>) => setGenomeFormat(e.target.value as GenomeFormat)}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n        >\r\n          {['binary', 'condensed', 'alpha'].map(format => <MenuItem key={format} value={format}>{format}</MenuItem>)\r\n\r\n          }\r\n          \r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles, createStyles } from '@material-ui/core';\r\nimport { Species } from './types';\r\nimport * as data from './flowers';\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst speciesList = Object.keys(data.default.flowers);\r\n\r\ninterface SpeciesSelectProps {\r\n  species: Species;\r\n  setSpecies: (species: Species) => void;\r\n}\r\n\r\nexport const SpeciesSelect = ({ species, setSpecies }: SpeciesSelectProps) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink id=\"species-select-label\">\r\n          Species\r\n            </InputLabel>\r\n        <Select\r\n          labelId=\"species-select-label\"\r\n          id=\"species-select\"\r\n          value={species}\r\n          onChange={(e: React.ChangeEvent<{ value: unknown }>) => setSpecies(e.target.value as Species)}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n        >\r\n          {\r\n            speciesList.sort().map(species => {\r\n              return <MenuItem key={species} value={species}>{species}</MenuItem>\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport * as data from './flowers';\r\nimport { Grid, TextField, Button, makeStyles, createStyles } from '@material-ui/core';\r\nimport { possibleGenomes } from './flowerUtils';\r\nimport { Scenario } from './Scenario';\r\nimport { Pairing, Species, GenomeFormat } from './types';\r\nimport { GenomeFormatSelector } from './GenomeFormatSelector';\r\nimport { SpeciesSelect } from './SpeciesSelect';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const Calculator = () => {\r\n  const speciesList = Object.keys(data.default.flowers).sort();\r\n  const [parent1, setParent1] = useState('');\r\n  const [parent2, setParent2] = useState('');\r\n  const [res, setRes] = useState([] as Pairing[]);\r\n  const [species, setSpecies] = useState(speciesList[0] as Species);\r\n  const [genomeFormat, setGenomeFormat] = useState('binary' as GenomeFormat);\r\n  const classes = useStyles();\r\n  function handleSetSpecies(species:Species) {\r\n    setRes([] as Pairing[]);\r\n    setSpecies(species);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <div>\r\n\r\n          <Grid container alignContent=\"center\" justify=\"center\" spacing={0} >\r\n            <Grid item xs={12} xl={6}>\r\n              <Grid container justify=\"center\">\r\n                <Grid item xs={12} sm={4} xl={3}>\r\n                  <TextField label=\"Parent 1\" value={parent1} onChange={event => setParent1(event.target.value)} helperText=\"e.g. 00_01_00, 010, seed red, island pink\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} xl={3}>\r\n                  <TextField label=\"Parent 2\" value={parent2} onChange={event => setParent2(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <SpeciesSelect species={species} setSpecies={handleSetSpecies} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <GenomeFormatSelector genomeFormat={genomeFormat} setGenomeFormat={setGenomeFormat} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={4}>\r\n              <Button variant=\"contained\" color=\"primary\" disabled={!species} onClick={_event => { setRes(possibleGenomes(parent1, parent2, species)) }}>Calculate</Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </div>\r\n\r\n      </form>\r\n\r\n\r\n\r\n      <Grid container className=\"resultsContainer\" alignItems=\"flex-start\" alignContent=\"center\" justify=\"center\" spacing={0} >\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={3} alignItems=\"flex-start\" alignContent=\"center\" justify=\"center\">\r\n            {res.map(result => (\r\n              <Grid item xs={12} sm={6} md={4} xl={3} key={result.parents.join('x')} component=\"div\">\r\n                <Scenario key={result.parents.join('x')} parents={result.parents} offspring={result.offspring} species={species} genomeFormat={genomeFormat} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Calculator;","import React, { useState } from 'react';\r\nimport { Grid, FormControl, InputLabel, Select, MenuItem, makeStyles, createStyles, Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport { Species, GenomeData, Offspring, GenomeFormat } from './types';\r\nimport * as data from './flowers';\r\nimport { getOffspringData } from './flowerUtils';\r\nimport { OffspringTable } from './OffspringTable';\r\nimport { GenomeFormatSelector } from './GenomeFormatSelector';\r\nimport { SpeciesSelect } from './SpeciesSelect';\r\nconst flowerData = data.default.flowers;\r\nconst speciesList = Object.keys(flowerData).sort();\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const Lookup = () => {\r\n  const classes = useStyles();\r\n  const [species, setSpecies] = useState(speciesList[0] as Species);\r\n  const [color, setColor] = useState(flowerData[species]['colors'][0] as string);\r\n  const [genomeFormat, setGenomeFormat] = useState('binary' as GenomeFormat);\r\n\r\n  let possibleGenomes = [] as Offspring[];\r\n  const allGenomes = flowerData[species]['genomes'] as GenomeData;\r\n  Object.keys(allGenomes).forEach(genome => {\r\n    if (allGenomes[genome].color === color) {\r\n      possibleGenomes.push(getOffspringData(species, genome))\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <SpeciesSelect species={species} setSpecies={setSpecies} />\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel shrink id=\"color-select-label\">\r\n              Color\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"color-select-label\"\r\n              id=\"color-select\"\r\n              value={color}\r\n              onChange={(e: React.ChangeEvent<{ value: unknown }>) => setColor(e.target.value as string)}\r\n              displayEmpty\r\n              className={classes.selectEmpty}\r\n            >\r\n              {species &&\r\n                flowerData[species]['colors'].map(color => {\r\n                  return <MenuItem key={color} value={color}>{color}</MenuItem>\r\n                })\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n         <GenomeFormatSelector genomeFormat={genomeFormat} setGenomeFormat={setGenomeFormat} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container className=\"resultsContainer\" alignItems=\"flex-start\" alignContent=\"center\" justify=\"center\" spacing={0} >\r\n        <Grid item xs={12} sm={6} md={4} xl={3} component=\"div\">\r\n          <Card>\r\n            <CardHeader\r\n              title={color + \" \" + species}\r\n            >\r\n\r\n            </CardHeader>\r\n            <CardContent>\r\n              <OffspringTable offspring={possibleGenomes} genomeFormat={genomeFormat} showProbability={false} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lookup;","import React, { useState } from 'react';\nimport './App.css';\nimport './bubble.scss';\nimport Calculator from './Calculator';\nimport Lookup from './Lookup';\nimport { AppBar, Tabs, Tab, createMuiTheme, ThemeProvider } from '@material-ui/core';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Quicksand',\n  },\n});\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <>{children}</>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const [value, setValue] = useState(0);\n  function a11yProps(index: any) {\n    return {\n      id: `scrollable-auto-tab-${index}`,\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <link href=\"https://fonts.googleapis.com/css?family=Quicksand:400,700\" rel=\"stylesheet\" type=\"text/css\"></link>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <AppBar position=\"static\" color=\"default\">\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              <Tab label=\"Calculator\" {...a11yProps(0)} />\n              <Tab label=\"Lookup\" {...a11yProps(1)} />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={value} index={0}>\n            <Calculator />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Lookup />\n          </TabPanel>\n        </div>\n      </ThemeProvider>\n\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}