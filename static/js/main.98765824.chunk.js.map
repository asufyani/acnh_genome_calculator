{"version":3,"sources":["flowers.js","flowerUtils.js","tableUtils.tsx","OffspringTable.tsx","Scenario.tsx","App.js","serviceWorker.js","index.js"],"names":["memoGeneCombos","numeral_map","0","1","2","flowers","data","split_binary","condensed","words","getColorData","species","genome","colorData","colorString","color","island","seed","getColorString","backgroundColor","bgColors","parseGenomeSet","genomeSet","genomes","split","splitGenes","forEach","rawGenome","trim","split_match","exec","push","condensed_match","map","numeral","parts","variant","variant_genome","possibleGenomes","parent1","parent2","splitGenes1","splitGenes2","childGenomesPerParents","genome1","genome2","allelesForEachGene","i","length","geneCombo","possibleChildGenomes","createPossibleGenomeList","possibilities","heads","shift","genomeTails","combinedGenes","j","join","res","Object","keys","parentCombo","result","parents","offspring","genomeOccurrences","genomeCount","childGenome","sort","dedupedGenome","condensedGenome","condenseGenome","probability","allele","reduce","a","b","parseInt","descendingComparator","orderBy","useStyles","makeStyles","theme","createStyles","offspringChip","width","border","root","paper","marginBottom","spacing","table","minWidth","visuallyHidden","clip","height","margin","overflow","padding","position","top","headCells","sortKey","numeric","disablePadding","label","EnhancedTableHead","props","classes","order","onRequestSort","TableHead","TableRow","headCell","TableCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","OffspringTable","genomeFormatCondensed","React","useState","setOrder","setOrderBy","Table","size","_event","TableBody","array","comparator","stabilizedThis","el","index","stableSort","getComparator","possibleOffspring","Chip","style","Typography","parentChip","Scenario","parent1ColorData","parent2ColorData","Card","CardHeader","title","CardContent","formControl","selectEmpty","marginTop","App","setParent1","setParent2","setRes","setSpecies","setGenomeFormatCondensed","flowerData","noValidate","autoComplete","Grid","container","alignItems","alignContent","justify","item","xs","TextField","value","onChange","target","helperText","FormControl","InputLabel","shrink","id","Select","labelId","displayEmpty","MenuItem","FormLabel","component","Switch","checked","name","Button","disabled","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.98765824.chunk.js","sourcesContent":["export default {\r\n    flowers: {\r\n\r\n\r\n        \"hyacinth\": {\r\n            \"seed\": {\r\n                \"yellow\": \"00_11_00\",\r\n                \"white\": \"00_00_01\",\r\n                \"red\": \"11_00_01\"\r\n            },\r\n            \"genomes\": {\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\",\r\n                    \"island\": 1\r\n                },\r\n                \"11_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"color\": \"blue\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"yellow\",\r\n                    \"seed\": 1\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"orange\",\r\n                    \"island\": 1\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                }\r\n            },\r\n            \"island\": {\r\n                \"blue\": \"11_01_00\",\r\n                \"pink\": \"01_00_01\",\r\n                \"orange\": \"01_11_00\"\r\n            }\r\n        },\r\n        \"windflower\": {\r\n            \"island\": {\r\n                \"pink\": \"11_11_01\",\r\n                \"blue\": \"01_00_11\"\r\n            },\r\n            \"seed\": {\r\n                \"red\": \"11_00_00\",\r\n                \"white\": \"00_00_01\",\r\n                \"orange\": \"00_11_00\"\r\n            },\r\n            \"genomes\": {\r\n                \"11_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"orange\",\r\n                    \"seed\": 1\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_01\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"color\": \"white\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"orange\"\r\n                }\r\n            }\r\n        },\r\n        \"mum\": {\r\n            \"seed\": {\r\n                \"white\": \"00_00_01\",\r\n                \"yellow\": \"00_11_00\",\r\n                \"red\": \"11_00_00\"\r\n            },\r\n            \"genomes\": {\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"purple\",\r\n                    \"island\": 1\r\n                },\r\n                \"11_11_01\": {\r\n                    \"color\": \"green\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"green\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"yellow\",\r\n                    \"seed\": 1\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"white\"\r\n                }\r\n            },\r\n            \"island\": {\r\n                \"purple\": \"11_01_01\",\r\n                \"pink\": \"01_01_11\"\r\n            }\r\n        },\r\n        \"lily\": {\r\n            \"island\": {\r\n                \"orange\": \"11_11_01\",\r\n                \"pink\": \"11_01_11\",\r\n                \"black\": \"11_01_00\"\r\n            },\r\n            \"genomes\": {\r\n                \"11_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_11\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_01\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                }\r\n            },\r\n            \"seed\": {\r\n                \"red\": \"11_00_01\",\r\n                \"white\": \"00_00_11\",\r\n                \"yellow\": \"00_11_00\"\r\n            }\r\n        },\r\n        \"pansy\": {\r\n            \"island\": {\r\n                \"blue\": \"01_00_11\",\r\n                \"orange\": \"11_11_01\"\r\n            },\r\n            \"seed\": {\r\n                \"yellow\": \"00_11_00\",\r\n                \"white\": \"00_00_01\",\r\n                \"red\": \"11_00_00\"\r\n            },\r\n            \"genomes\": {\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"blue\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_01\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"orange\"\r\n                }\r\n            }\r\n        },\r\n        \"rose\": {\r\n            \"seed\": {\r\n                \"yellow\": \"00_11_00_00\",\r\n                \"white\": \"00_00_01_00\",\r\n                \"red\": \"11_00_00_01\"\r\n            },\r\n            \"genomes\": {\r\n                \"11_00_01_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_01_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_11_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_11_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_00_00_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_00_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_11_11_00\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"11_11_00_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_01_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_01_00_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_00_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_01_11_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_11_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_01_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_00_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_00_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_11_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_00_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_00_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_01_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_11_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_01_01_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_00_11_11\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_01_00_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_11_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_11_11_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_11_00_00\": {\r\n                    \"color\": \"yellow\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_11_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_01_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_11_00_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_11_11_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_11_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_00_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_01_01_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_01_00\": {\r\n                    \"color\": \"white\",\r\n                    \"seed\": 1\r\n                },\r\n                \"00_01_01_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_11_01_01\": {\r\n                    \"color\": \"orange\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_01_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"01_11_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_11_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_11_00_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_00_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_11_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_00_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_11_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_11_11_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_00_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_00_01_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_11_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_00_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_01_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_11_00_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_11_11_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_01_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_00_11_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"01_00_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_00_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_01_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_11_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_01_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_11_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_01_11\": {\r\n                    \"color\": \"white\"\r\n                }\r\n            },\r\n            \"island\": {\r\n                \"orange\": \"11_11_01_01\",\r\n                \"pink\": \"11_00_11_11\"\r\n            }\r\n        },\r\n        \"tulip\": {\r\n            \"genomes\": {\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"yellow\",\r\n                    \"seed\": 1\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"color\": \"white\",\r\n                    \"seed\": 1\r\n                }\r\n            },\r\n            \"seed\": {\r\n                \"yellow\": \"00_11_00\",\r\n                \"white\": \"00_00_01\",\r\n                \"red\": \"11_00_01\"\r\n            },\r\n            \"island\": {\r\n                \"black\": \"11_01_00\",\r\n                \"orange\": \"01_11_00\",\r\n                \"pink\": \"01_00_01\"\r\n            }\r\n        },\r\n        \"cosmos\": {\r\n            \"island\": {\r\n                \"orange\": \"11_01_01\",\r\n                \"pink\": \"01_01_11\"\r\n            },\r\n            \"genomes\": {\r\n                \"01_11_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"color\": \"white\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"pink\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"orange\",\r\n                    \"island\": 1\r\n                },\r\n                \"11_11_01\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"yellow\"\r\n                }\r\n            },\r\n            \"seed\": {\r\n                \"red\": \"11_00_00\",\r\n                \"yellow\": \"00_11_01\",\r\n                \"white\": \"00_00_01\"\r\n            }\r\n        }\r\n    }\r\n}","import * as data from './flowers';\r\nconst memoGeneCombos = {\r\n  '0000': ['00'],\r\n  '0001': ['00', '01'],\r\n  '0011': ['01'],\r\n  '0100': ['00', '01'],\r\n  '0101': ['00', '01', '01', '11'],\r\n  '0111': ['01', '11'],\r\n  '1100': ['01'],\r\n  '1101': ['01', '11'],\r\n  '1111': ['11']\r\n};\r\n\r\nconst numeral_map = {\r\n  0: '00',\r\n  1: '01',\r\n  2: '11'\r\n}\r\n\r\nconst flowers = data.default.flowers;\r\nconst split_binary = /(?:[01]{2}(\\S)){2,3}[01]{2}/;\r\nconst condensed = /[\\d]{3,4}/;\r\nconst words = /(seed|island) (red|pink|yellow|orange|black|blue|purple|white)/;\r\n\r\nexport function getColorData(species, genome) {\r\n  let colorData = flowers[species]['genomes'][genome];\r\n  let colorString = getColorString(colorData);\r\n  colorData = {\r\n    backgroundColor: bgColors[colorData.color],\r\n    color: colorString,\r\n  };\r\n  return colorData;\r\n}\r\n\r\nexport function getColorString(colorData) {\r\n  let colorString = colorData.color;\r\n  if (colorData.island) {\r\n    colorString += \" (island)\";\r\n  }\r\n  else if (colorData.seed) {\r\n    colorString += \" (seed)\";\r\n  }\r\n  return colorString;\r\n}\r\n\r\n\r\nconst bgColors = {\r\n  \"black\": '#666',\r\n  \"blue\": '#36f',\r\n  \"orange\": '#f93',\r\n  \"red\": \"#f33\",\r\n  \"yellow\": \"#ff3\",\r\n  \"purple\": \"#63f\",\r\n  \"green\": \"#9c0\",\r\n  \"pink\": \"#f9f\",\r\n  \"white\": \"#fff\",\r\n}\r\n\r\n\r\nfunction parseGenomeSet(genomeSet, species) {\r\n  const genomes = genomeSet.split(',');\r\n  let splitGenes = [];\r\n  genomes.forEach(rawGenome => {\r\n    const genome = rawGenome.trim();\r\n    const split_match = split_binary.exec(genome);\r\n    if (split_match && split_match[1]) {\r\n      splitGenes.push(genome.split(split_match[1]));\r\n    }\r\n    const condensed_match = condensed.exec(genome);\r\n    if (!split_match && condensed_match && condensed_match[0]) {\r\n      splitGenes.push(genome.split('').map(numeral => numeral_map[numeral]));\r\n    }\r\n    const word_match = words.exec(genome);\r\n    if (word_match) {\r\n      const parts = genome.split(' ');\r\n      const variant = parts[0];\r\n      const color = parts[1];\r\n      const variant_genome = flowers[species][variant][color];\r\n      splitGenes.push(variant_genome.split('_'));\r\n    }\r\n  });\r\n  return splitGenes;\r\n}\r\n\r\nexport function possibleGenomes(parent1, parent2, species) {\r\n  if (parent1 === '') {\r\n    return parent2;\r\n  }\r\n  if (parent2 === '') {\r\n    return parent1;\r\n  }\r\n  // Split up the parents into their possible genes\r\n  const splitGenes1 = parseGenomeSet(parent1, species);\r\n  const splitGenes2 = parseGenomeSet(parent2, species);\r\n\r\n  // Combine the possible genes of the parents\r\n  let childGenomesPerParents = {};\r\n  splitGenes1.forEach(genome1 => {\r\n    splitGenes2.forEach(genome2 => {\r\n      let allelesForEachGene = [];\r\n      for (let i = 0; i < genome1.length; i++) {\r\n        const geneCombo = genome1[i] + genome2[i];\r\n        allelesForEachGene.push(memoGeneCombos[geneCombo]);\r\n      }\r\n      let possibleChildGenomes = createPossibleGenomeList(allelesForEachGene);\r\n      childGenomesPerParents[genome1.join('_') + ',' + genome2.join('_')] = possibleChildGenomes;\r\n    })\r\n  });\r\n  // Massage the data to be displayed in the sheet.\r\n  let res = [];\r\n  Object.keys(childGenomesPerParents).forEach(parentCombo => {\r\n    let result = {};\r\n    let parents = parentCombo.split(',');\r\n    result.parents = parents;\r\n    result.offspring = [];\r\n    let genomeOccurrences = {};\r\n    let genomeCount = 0;\r\n    childGenomesPerParents[parentCombo].forEach(childGenome => {\r\n      genomeOccurrences[childGenome] = genomeOccurrences[childGenome] ? genomeOccurrences[childGenome] + 1 : 1;\r\n      genomeCount++;\r\n    });\r\n    Object.keys(genomeOccurrences).sort().forEach(dedupedGenome => {\r\n      const colorData = getColorData(species, dedupedGenome);\r\n      const condensedGenome = condenseGenome(dedupedGenome);\r\n      result.offspring.push({\r\n        genome: dedupedGenome,\r\n        condensedGenome,\r\n        probability: genomeOccurrences[dedupedGenome] / genomeCount,\r\n        species,\r\n        ...colorData\r\n      });\r\n    });\r\n    res.push(result);\r\n  });\r\n  return res;\r\n}\r\n\r\nexport function condenseGenome(genome) {\r\n  return genome.split('_').map(allele => { return allele.split('').reduce((a,b) => {return parseInt(a,2)+parseInt(b,2)})}).join('');\r\n}\r\n\r\nexport function createPossibleGenomeList(possibilities) {\r\n  if (possibilities.length === 1) {\r\n    return possibilities[0]\r\n  }\r\n  const heads = possibilities.shift();\r\n  const genomeTails = createPossibleGenomeList(possibilities);\r\n  let combinedGenes = [];\r\n  for (let i = 0; i < heads.length; i++) {\r\n    for (let j = 0; j < genomeTails.length; j++) {\r\n      combinedGenes.push(heads[i] + '_' + genomeTails[j]);\r\n    }\r\n  }\r\n  return combinedGenes;\r\n}\r\n\r\n","import { Order } from './types';\r\n\r\n// all below from material-ui reference\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport function getComparator<Key extends keyof any>(order: Order, orderBy: Key): (a: {\r\n    [key in Key]: number | string;\r\n}, b: {\r\n    [key in Key]: number | string;\r\n}) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nexport function stableSort<T>(array: T[], comparator: (a: T, b: T) => number): T[] {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0)\r\n            return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n","import React from 'react';\r\nimport { TableHead, TableRow, TableCell, TableSortLabel, makeStyles, createStyles, Theme, Table, TableBody, Chip, Typography } from '@material-ui/core';\r\nimport { Offspring, Order } from './types';\r\nimport { stableSort, getComparator } from './tableUtils';\r\ntype SortableKey = \"genome\" | \"probability\" | \"color\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    offspringChip: {\r\n      width: '100%',\r\n      border: '1px solid black'\r\n    },\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }),\r\n);\r\ninterface HeadCell {\r\n  disablePadding: boolean;\r\n  sortKey: SortableKey;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n  { sortKey: 'genome', numeric: false, disablePadding: true, label: 'Genome' },\r\n  { sortKey: 'color', numeric: false, disablePadding: false, label: 'Color' },\r\n  { sortKey: 'probability', numeric: true, disablePadding: false, label: 'Probability' },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: SortableKey) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property: SortableKey) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.sortKey}\r\n            align='left'\r\n            padding='default'\r\n            sortDirection={orderBy === headCell.sortKey ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.sortKey}\r\n              direction={orderBy === headCell.sortKey ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.sortKey)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.sortKey ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport interface OffspringTableProps {\r\n  offspring: Offspring[],\r\n  genomeFormatCondensed: boolean,\r\n}\r\n\r\nexport const OffspringTable = ({ offspring, genomeFormatCondensed }: OffspringTableProps) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<SortableKey>('genome');\r\n  const handleRequestSort = (_event: React.MouseEvent<unknown>, property: SortableKey) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  return (\r\n    <Table size='small'>\r\n      <EnhancedTableHead\r\n        classes={classes}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        onRequestSort={handleRequestSort}\r\n      />\r\n      <TableBody>\r\n        {\r\n          stableSort(offspring, getComparator(order, orderBy)).map(possibleOffspring => {\r\n            return <TableRow key={possibleOffspring.genome}>\r\n              <TableCell align='left'>{genomeFormatCondensed ? possibleOffspring.condensedGenome : possibleOffspring.genome}</TableCell>\r\n              <TableCell align='center'>\r\n                <Chip style={{ backgroundColor: possibleOffspring.backgroundColor }} className={classes.offspringChip} label={<Typography variant='subtitle2'>{possibleOffspring.color}</Typography>} />\r\n              </TableCell>\r\n              <TableCell align='left'>{possibleOffspring.probability * 100 + '%'}</TableCell>\r\n            </TableRow>\r\n          })}\r\n      </TableBody>\r\n\r\n    </Table>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Card, CardContent, CardHeader, Typography, Chip, makeStyles, createStyles } from '@material-ui/core';\r\nimport { getColorData, condenseGenome } from './flowerUtils';\r\nimport { OffspringTable } from './OffspringTable';\r\nimport {Offspring} from './types';\r\n\r\ninterface ScenarioProps {\r\n  parents: string[],\r\n  offspring: Offspring[],\r\n  species: string,\r\n  genomeFormatCondensed: boolean,\r\n}\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    parentChip: {\r\n      border: '1px solid black'\r\n    },\r\n  }),\r\n);\r\n\r\nexport const Scenario = ({ parents, offspring, species, genomeFormatCondensed }: ScenarioProps) => {\r\n  const parent1ColorData = getColorData(species, parents[0]);\r\n  const parent2ColorData = getColorData(species, parents[1]);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title={<>\r\n          <Chip style={{ backgroundColor: parent1ColorData.backgroundColor }} className={classes.parentChip} label={<Typography variant='subtitle1'>{ genomeFormatCondensed ? condenseGenome(parents[0]) :parents[0]}</Typography>} />\r\n          {\" x \"}\r\n          <Chip style={{ backgroundColor: parent2ColorData.backgroundColor }} className={classes.parentChip} label={<Typography variant='subtitle1'>{genomeFormatCondensed ? condenseGenome(parents[1]) :parents[1]}</Typography>} />\r\n        </>\r\n        }\r\n      />\r\n\r\n      <CardContent>\r\n        <OffspringTable offspring={offspring} genomeFormatCondensed={genomeFormatCondensed}/>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  )\r\n}","import React, { useState } from 'react';\nimport { possibleGenomes } from './flowerUtils';\nimport { Scenario } from './Scenario';\nimport { Switch, Button, FormControl, FormLabel, InputLabel, TextField, Select, MenuItem, Grid, Typography } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport * as data from './flowers';\nimport './App.css';\nconst useStyles = makeStyles((theme) =>\n\n\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }))\n  ;\n\n\n\nfunction App() {\n  const [parent1, setParent1] = useState('');\n  const [parent2, setParent2] = useState('');\n  const [res, setRes] = useState([]);\n  const [species, setSpecies] = useState('');\n  const [genomeFormatCondensed, setGenomeFormatCondensed] = useState(false);\n  const classes = useStyles();\n  const flowerData = data.default.flowers;\n  function handleSwitch(event) {\n    setGenomeFormatCondensed(!genomeFormatCondensed);\n  };\n  return (\n    <>\n      <div className=\"App\">\n\n\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <div>\n\n            <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\" spacing={0}>\n              <Grid item xs={6}>\n                <Grid container>\n                  <Grid item xs>\n                    <TextField label=\"Parent 1\" value={parent1} onChange={event => setParent1(event.target.value)} helperText=\"e.g. 00_01_00, 010, seed red, island pink\" />\n                  </Grid>\n                  <Grid item xs>\n                    <TextField label=\"Parent 2\" value={parent2} onChange={event => setParent2(event.target.value)} />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControl className={classes.formControl}>\n                      <InputLabel shrink id=\"species-select-label\">\n                        Species\n                    </InputLabel>\n                      <Select\n                        labelId=\"species-select-label\"\n                        id=\"species-select\"\n                        value={species}\n                        onChange={event => { setSpecies(event.target.value); setRes([]); }}\n                        displayEmpty\n                        className={classes.selectEmpty}\n                      >\n                        <MenuItem value=\"\">\n                          <em>None</em>\n                        </MenuItem>\n                        {\n                          Object.keys(flowerData).map(species => {\n                            return <MenuItem key={species} value={species}>{species}</MenuItem>\n                          })\n                        }\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container justify=\"center\">\n                  <Grid item xs={12}>\n                    <FormControl>\n                      <FormLabel component=\"legend\">Genome Format</FormLabel>\n\n                      <Typography component=\"div\">\n                        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                          <Grid item>Binary</Grid>\n                          <Grid item>\n                            <Switch color=\"primary\" checked={genomeFormatCondensed} onChange={handleSwitch} name=\"checkedC\" />\n                          </Grid>\n                          <Grid item>Condensed</Grid>\n                        </Grid>\n                      </Typography>\n                    </FormControl>\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"contained\" color=\"primary\" disabled={!species} onClick={event => { setRes(possibleGenomes(parent1, parent2, species)) }}>Calculate</Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n\n          </div>\n\n        </form>\n\n      </div>\n\n\n      <Grid container className=\"resultsContainer\" spacing={3} alignItems=\"center\" alignContent=\"center\" justify=\"center\">\n        <Grid item xs={10}>\n          <Grid container spacing={3} alignItems=\"flex-start\" alignContent=\"center\" justify=\"center\">\n            {res.map(result => (\n              <Grid item xs={4} key={result.parents}>\n                <Scenario key={result.parents} parents={result.parents} offspring={result.offspring} species={species} genomeFormatCondensed={genomeFormatCondensed} />\n              </Grid>\n            ))}\n          </Grid>\n\n        </Grid>\n      </Grid>\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}