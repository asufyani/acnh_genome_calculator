{"version":3,"sources":["enums.ts","flowers.js","flowerUtils.ts","SpeciesSelect.tsx","Calculator.tsx","tableUtils.tsx","OffspringTable.tsx","Bubble.tsx","Lookup.tsx","CornerIcon.tsx","Scenario.tsx","ResultGrid.tsx","ColorBreakdown.tsx","FormatSelector.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Color","Species","bgColors","GenomeFormat","ProbabilityFormat","flowers","memoGeneCombos","numeral_map","0","1","2","rpair","ypair","wpair","spair","rys","ryw","alphaAlleles","rose","cosmos","lily","pansy","tulip","hyacinth","mum","windflower","getParentsForGenome","childGenes","species","constructParentsFromCombos","combos","parent1","parent2","nextPairs","shift","outputParent1","outputParent2","forEach","pair","half1","substr","half2","parent1member","push","concat","parent2member","length","map","gene","Object","keys","filter","geneCombo","_","some","value","parent1binary","genes","join","parent2binary","exists","allPairings","item","idx","key","sort","res","possibleGenomes","data","split_binary","condensed","words","getOffspringData","genome","colorData","colorString","color","seed","island","getColorString","backgroundColor","colorDisplayString","getColorData","condensedGenome","split","allele","reduce","a","b","parseInt","toString","getCondensedGenome","alphaGenome","pairs","alphas","digit","getAlphaGenome","getAllOffspringForColor","allGenomes","parseGenomeSet","genomeSet","genomes","splitGenes","rawGenome","trim","matched","toLowerCase","offspring","split_match","exec","condensed_match","numeral","parts","variant","variant_genome","checkGene","Error","pickGenomeString","format","binary","alpha","offspringFilter","splitGenes1","splitGenes2","filterGenomes","childGenomesPerParents","genome1","genome2","allelesForEachGene","_item","i","possibleChildGenomes","createPossibleGenomeList","possibilities","heads","genomeTails","combinedGenes","head","tail","parentCombo","result","parents","genomeOccurrences","genomeCount","childGenome","dedupedGenome","offspringData","probability","filterGenome","e","error","getProbability","percentage","denominator","gcd","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","root","width","speciesList","SpeciesSelect","setSpecies","classes","FormControl","className","InputLabel","shrink","id","Select","labelId","onChange","target","displayEmpty","MenuItem","Calculator","setParent1","setParent2","setOffspringFilter","setRes","setErr","handleSetSpecies","React","useCallback","handleCalculate","_event","children","childrenGenes","pairings","pairing","console","log","possibleParents","message","noValidate","autoComplete","Grid","container","alignContent","justify","xs","xl","sm","TextField","label","event","helperText","Button","disabled","onClick","descendingComparator","orderBy","offspringChip","border","fontWeight","paper","marginBottom","table","visuallyHidden","clip","height","overflow","padding","position","top","EnhancedTableHead","props","order","onRequestSort","showProbability","showGenome","headCells","sortKey","numeric","disablePadding","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","active","direction","property","hideSortIcon","OffspringTable","memo","genomeFormat","probabilityFormat","useState","setOrder","setOrderBy","Table","size","TableBody","array","comparator","stabilizedThis","el","index","stableSort","getComparator","possibleOffspring","Chip","style","Typography","Bubble","headers","resultsTable","cornerIcon","text","name","flowerData","Lookup","setColor","alignItems","md","component","CornerIcon","icon","handler","Scenario","showChart","parent","ResultsGrid","err","ColorBreakdown","closeModal","colors","colorOffspring","pieData","RADIAN","Math","PI","dataKey","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","fontSize","labelLine","entry","FormatSelector","formatOptions","setFormat","createMuiTheme","typography","fontFamily","fontWeightBold","palette","primary","main","purple","secondary","App","setValue","a11yProps","localStorage","getItem","_setGenomeFormat","_setProbabilityFormat","showModal","setShowModal","chartPairing","setChartPairing","updateSpecies","handleClose","setProbabilityFormat","setItem","setGenomeFormat","href","rel","type","ThemeProvider","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","centered","Tab","axis","onChangeIndex","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"qPAAYA,EAYAC,EAWAC,EAYAC,EAMAC,E,uHCzCG,GAAEC,QAAQ,CAAC,SAAW,CAAC,OAAS,CAAC,OAAS,WAAW,KAAO,WAAW,KAAO,YAAY,KAAO,CAAC,MAAQ,WAAW,OAAS,WAAW,IAAM,YAAY,QAAU,CAAC,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,OAAS,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,OAAS,EAAE,MAAQ,QAAQ,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,KAAO,EAAE,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,SAAS,OAAS,GAAG,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,KAAO,EAAE,MAAQ,OAAO,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,QAAQ,KAAO,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,WAAW,OAAS,CAAC,OAAO,SAAS,OAAO,SAAS,MAAM,QAAQ,WAAW,WAAa,CAAC,OAAS,CAAC,OAAO,SAAS,OAAO,SAAS,MAAM,SAAS,OAAS,CAAC,KAAO,WAAW,KAAO,YAAY,KAAO,CAAC,MAAQ,WAAW,OAAS,WAAW,IAAM,YAAY,QAAU,CAAC,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,QAAQ,KAAO,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,OAAS,EAAE,MAAQ,QAAQ,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,OAAS,GAAG,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,KAAO,EAAE,MAAQ,OAAO,WAAW,CAAC,MAAQ,SAAS,KAAO,KAAK,OAAS,CAAC,OAAS,CAAC,OAAS,WAAW,KAAO,YAAY,KAAO,CAAC,MAAQ,WAAW,OAAS,WAAW,IAAM,YAAY,QAAU,CAAC,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,OAAS,EAAE,MAAQ,QAAQ,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,MAAM,KAAO,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,OAAS,EAAE,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,KAAO,EAAE,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,KAAO,EAAE,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,OAAS,CAAC,QAAQ,SAAS,OAAO,MAAM,QAAQ,WAAW,MAAQ,CAAC,OAAS,CAAC,OAAO,SAAS,SAAS,MAAM,QAAQ,UAAU,KAAO,CAAC,IAAM,WAAW,OAAS,WAAW,MAAQ,YAAY,OAAS,CAAC,OAAS,WAAW,KAAO,YAAY,QAAU,CAAC,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,KAAO,EAAE,MAAQ,OAAO,WAAW,CAAC,KAAO,EAAE,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,OAAS,EAAE,MAAQ,QAAQ,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,QAAQ,KAAO,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,OAAS,GAAG,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,YAAY,KAAO,CAAC,OAAS,CAAC,QAAQ,SAAS,OAAO,MAAM,QAAQ,UAAU,KAAO,CAAC,OAAS,WAAW,MAAQ,WAAW,IAAM,YAAY,OAAS,CAAC,OAAS,WAAW,MAAQ,WAAW,KAAO,YAAY,QAAU,CAAC,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,QAAQ,KAAO,GAAG,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,SAAS,OAAS,GAAG,WAAW,CAAC,MAAQ,OAAO,OAAS,GAAG,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,KAAO,EAAE,MAAQ,OAAO,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,OAAS,EAAE,MAAQ,SAAS,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,KAAO,EAAE,MAAQ,YAAY,MAAQ,CAAC,OAAS,CAAC,QAAQ,SAAS,OAAO,SAAS,MAAM,QAAQ,UAAU,OAAS,CAAC,MAAQ,WAAW,OAAS,WAAW,KAAO,YAAY,QAAU,CAAC,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,KAAO,EAAE,MAAQ,OAAO,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,QAAQ,KAAO,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,OAAS,EAAE,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,KAAO,GAAG,WAAW,CAAC,MAAQ,QAAQ,OAAS,GAAG,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,OAAS,EAAE,MAAQ,QAAQ,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,WAAW,KAAO,CAAC,IAAM,WAAW,OAAS,WAAW,MAAQ,aAAa,KAAO,CAAC,OAAS,CAAC,KAAO,cAAc,OAAS,eAAe,KAAO,CAAC,MAAQ,cAAc,OAAS,cAAc,IAAM,eAAe,QAAU,CAAC,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,OAAO,OAAS,GAAG,cAAc,CAAC,KAAO,EAAE,MAAQ,UAAU,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,KAAO,EAAE,MAAQ,OAAO,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,KAAO,EAAE,MAAQ,SAAS,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,OAAS,EAAE,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,QAAQ,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,SAAS,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,OAAO,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,UAAU,cAAc,CAAC,MAAQ,WAAW,OAAS,CAAC,QAAQ,OAAO,SAAS,OAAO,SAAS,MAAM,QAAQ,WAAW,IAAM,CAAC,OAAS,CAAC,QAAQ,OAAO,SAAS,MAAM,QAAQ,UAAU,KAAO,CAAC,IAAM,WAAW,MAAQ,WAAW,OAAS,YAAY,OAAS,CAAC,KAAO,WAAW,OAAS,YAAY,QAAU,CAAC,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,QAAQ,KAAO,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,SAAS,OAAS,GAAG,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,SAAS,WAAW,CAAC,MAAQ,SAAS,KAAO,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,MAAM,KAAO,GAAG,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,MAAQ,UAAU,WAAW,CAAC,OAAS,EAAE,MAAQ,QAAQ,WAAW,CAAC,MAAQ,QAAQ,WAAW,CAAC,MAAQ,OAAO,WAAW,CAAC,MAAQ,a,SDAv6TL,K,cAAAA,E,YAAAA,E,gBAAAA,E,UAAAA,E,gBAAAA,E,gBAAAA,E,cAAAA,E,YAAAA,E,eAAAA,M,cAYAC,K,oBAAAA,E,wBAAAA,E,UAAAA,E,YAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,iBAAAA,M,cAWAC,K,aAAAA,E,YAAAA,E,cAAAA,E,WAAAA,E,cAAAA,E,cAAAA,E,aAAAA,E,YAAAA,E,cAAAA,M,cAYAC,K,gBAAAA,E,sBAAAA,E,eAAAA,M,cAMAC,K,wBAAAA,E,qBAAAA,M,2BErCNE,EAA8C,CAClD,OAAQ,CAAC,MACT,OAAQ,CAAC,KAAM,MACf,OAAQ,CAAC,MACT,OAAQ,CAAC,KAAM,MACf,OAAQ,CAAC,KAAM,KAAM,KAAM,MAC3B,OAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,MACT,KAAQ,CAAC,KAAM,MACf,KAAQ,CAAC,OAGLC,EAAyC,CAC7CC,EAAG,KACHC,EAAG,KACHC,EAAG,MAGCC,EAAQ,CAAC,IAAK,KACdC,EAAQ,CAAC,IAAK,KACdC,EAAQ,CAAC,IAAK,KACdC,EAAQ,CAAC,IAAK,KACdC,EAAM,CAACJ,EAAOC,EAAOE,GACrBE,EAAM,CAACL,EAAOC,EAAOC,GACrBI,EAAiD,CACrDC,KAAM,CAACP,EAAOC,EAAOC,EAAOC,GAC5BK,OAAQ,CAACR,EAAOC,EAAOE,GACvBM,KAAML,EACNM,MAAOL,EACPM,MAAOP,EACPQ,SAAUP,EACVQ,IAAKR,EACLS,WAAY,CAACd,EAAO,CAAC,IAAK,KAAME,IAG3B,SAASa,EAAoBC,EAAsBC,GACxD,IAD0E,EA2C5E,SAASC,EAA2BC,EAAoBC,EAAqBC,GAC3E,IAAMC,EAAYH,EAAOI,QACrBC,EAA4B,GAC5BC,EAA4B,GAYhC,OAXS,OAATH,QAAS,IAATA,KAAWI,SAAQ,SAAAC,GACjB,IAAMC,EAAQD,EAAKE,OAAO,EAAE,GACtBC,EAAQH,EAAKE,OAAO,EAAE,GAE5BT,EAAQM,SAAQ,SAAAK,GACdP,EAAcQ,KAAKD,EAAcE,OAAO,CAACL,QAE3CP,EAAQK,SAAQ,SAAAQ,GACdT,EAAcO,KAAKE,EAAcD,OAAO,CAACH,WAGxB,KAAX,OAANX,QAAM,IAANA,OAAA,EAAAA,EAAQgB,QACH,CACLhB,SACAC,QAASI,EACTH,QAASI,GAIJP,EAA2BC,EAAQK,EAAeC,GA5D9BP,CALJF,EAAWoB,KAAI,SAAAC,GACtC,OAAOC,OAAOC,KAAK5C,GAAgB6C,QAAO,SAAAC,GACxC,OAAOC,IAAEC,KAAKhD,EAAe8C,IAAY,SAAAG,GAAW,OAAOA,IAAUP,WAGC,CAAC,IAAK,CAAC,KAAzEjB,EANkE,EAMlEA,QAASC,EANyD,EAMzDA,QACXwB,EAAgBzB,EAAQgB,KAAI,SAAAU,GAAK,OAAIA,EAAMC,KAAK,QAChDC,EAAgB3B,EAAQe,KAAI,SAAAU,GAAK,OAAIA,EAAMC,KAAK,QAClDE,EAAkC,GAElCC,EAAc,GASlB,OARAL,EAAcnB,SAAQ,SAACyB,EAAMC,GAC3B,IAAMC,EAAK,CAACR,EAAcO,GAAMJ,EAAcI,IAAME,OAAOP,KAAK,KAChE,IAAKE,EAAOI,GAAM,CAChBJ,EAAOI,GAAK,EADI,IAERE,EAAQC,EAAgBX,EAAcO,GAAMJ,EAAcI,GAAM,GAAInC,GAApEsC,IACRL,EAAcA,EAAYjB,OAAOsB,OAG9BL,EAkDT,IAAMxD,EAAU+D,EAAa/D,QACvBgE,EAAe,8BACfC,EAAY,YACZC,EAAQ,kEAsCP,SAASC,EAAiB5C,EAAkB6C,GACjD,IAAMC,EArCD,SAAsB9C,EAAkB6C,GAC7C,IACML,EADyB/D,EAAQuB,GAAR,QACP6C,GAClBE,EAWD,YAA4G,IAAlFC,EAAiF,EAAjFA,MAAOC,EAA0E,EAA1EA,KAAMC,EAAoE,EAApEA,OACxCH,EAAcC,EACdE,EACFH,GAAe,YAERE,IACPF,GAAe,WAEjB,OAAOA,EAnBaI,CAAeX,GAQnC,MAPkB,CAChBxC,UACA6C,SACAO,gBAAiB9E,EAASkE,EAAKQ,OAC/BK,mBAAoBN,EACpBC,MAAOR,EAAKQ,OA4BIM,CAAatD,EAAS6C,GAClCU,EAwLD,SAA4BV,GACjC,OAAOA,EAAOW,MAAM,KAAKrC,KAAI,SAAAsC,GAAY,OAAOA,EAAOD,MAAM,IAAIE,QAAO,SAACC,EAAWC,GAAgB,OAAQC,SAASF,EAAG,GAAKE,SAASD,EAAG,IAAIE,iBAAiBhC,KAAK,IAzL3IiC,CAAmBlB,GACrCmB,EAdD,SAAwBhE,EAAkB6C,GAC/C,IAAMoB,EAAQpB,EAAOW,MAAM,KACrBU,EAAS7E,EAAaW,GAC5B,OAAOiE,EAAM9C,KAAI,SAACT,EAAMyB,GACtB,OAAOzB,EAAK8C,MAAM,IAAIrC,KAAI,SAAAgD,GACxB,OAAOD,EAAO/B,GAAK0B,SAASM,EAAO,OAClC9B,OAAOP,KAAK,OACdA,KAAK,KAOYsC,CAAepE,EAAS6C,GAC5C,OAAO,aACLA,SACAmB,cACAT,kBACAvD,WACG8C,GAIA,SAASuB,EAAwBrE,EAAkBgD,GACxD,IAAIT,EAAkB,GAChB+B,EAAa7F,EAAQuB,GAAR,QAMnB,OALAqB,OAAOC,KAAKgD,GAAY7D,SAAQ,SAAAoC,GAC1ByB,EAAWzB,GAAQG,QAAUA,GAC/BT,EAAgBxB,KAAK6B,EAAiB5C,EAAS6C,OAG5CN,EAIT,SAASgC,EAAeC,EAAmBxE,GACzC,IAAMyE,EAAUD,EAAUhB,MAAM,KAC5BkB,EAAa,GA+CjB,OA9CAD,EAAQhE,SAAQ,SAAAkE,GACd,IAAM9B,EAAS8B,EAAUC,OACrBxD,EAAO,GACPyD,EAAU,EACVhC,EAAOiC,gBAAiB1G,IAC1ByG,EAAU,EACcR,EAAwBrE,EAAS6C,EAAOiC,eAChDrE,SAAQ,SAACsE,GACvB3D,EAAO2D,EAAUlC,OAAOW,MAAM,KAC9BkB,EAAW3D,KAAKK,OAGpB,IAAKyD,EAAS,CACZ,IAAMG,EAAcvC,EAAawC,KAAKpC,GAClCmC,GAAeA,EAAY,KAC7BH,EAAU,EACVzD,EAAOyB,EAAOW,MAAMwB,EAAY,IAChCN,EAAW3D,KAAKK,IAIpB,IAAKyD,EAAS,CACZ,IAAMK,EAAkBxC,EAAUuC,KAAKpC,GACnCqC,GAAmBA,EAAgB,KACrCL,EAAU,EACVzD,EAAOyB,EAAOW,MAAM,IAAIrC,KAAI,SAACgE,GAAD,OAA6BxG,EAAYkF,SAASsB,EAAS,OACvFT,EAAW3D,KAAKK,IAGpB,IAAKyD,GACgBlC,EAAMsC,KAAKpC,GACd,CACd,IAAMuC,EAAQvC,EAAOiC,cAActB,MAAM,KACnC6B,EAAUD,EAAM,GAChBpC,EAAQoC,EAAM,GAEdE,EAD0B7G,EAAQuB,GAASqF,GACdrC,GACnC5B,EAAOkE,EAAe9B,MAAM,KAC5BkB,EAAW3D,KAAKK,GAIpB,IAOJ,SAAmBA,EAAgBpB,GACjC,OAAOoB,EAAKF,SAAW7B,EAAaW,GAASkB,OARtCqE,CAAUnE,EAAMpB,GACnB,MAAM,IAAIwF,MAAJ,0BAA6Bb,EAA7B,wBAAsD3E,OAGzD0E,EAOF,SAASe,EAAiBV,EAA6BW,GAC5D,OAAQA,GACN,KAAKnH,EAAaoH,OAChB,OAAOZ,EAAUlC,OACnB,KAAKtE,EAAamE,UAChB,OAAOqC,EAAUxB,gBACnB,KAAKhF,EAAaqH,MAChB,OAAOb,EAAUf,YACnB,QACE,MAAO,IAON,SAASzB,EAAgBpC,EAAiBC,EAAiByF,EAAyB7F,GAQzF,IACE,IAAM8F,EAAcvB,EAAepE,EAASH,GACtC+F,EAAcxB,EAAenE,EAASJ,GACxCgG,EAA0B,GAC1BH,IACFG,EAAgBzB,EAAesB,EAAiB7F,GAASmB,KAAI,SAACC,GAAW,OAAOA,EAAKU,KAAK,SAK5F,IAAImE,EAAsD,GAC1DH,EAAYrF,SAAQ,SAAAyF,GAClBH,EAAYtF,SAAQ,SAAA0F,GAClB,IAAIF,EAAuBC,EAAQpE,KAAK,KAAO,IAAMqE,EAAQrE,KAAK,QAC7DmE,EAAuBE,EAAQrE,KAAK,KAAO,IAAMoE,EAAQpE,KAAK,MADnE,CAIA,IAAIsE,EAAqB,GACzBF,EAAQzF,SAAQ,SAAC4F,EAAOC,GACtB,IAAM9E,EAAY0E,EAAQI,GAAKH,EAAQG,GACvCF,EAAmBrF,KAAKrC,EAAe8C,OAGzC,IAAI+E,EA8DZ,SAASC,EAAyBC,GAChC,GAA6B,IAAzBA,EAAcvF,OAChB,OAAOuF,EAAc,GAEvB,IAAMC,EAAQD,EAAcnG,QACtBqG,EAAcH,EAAyBC,GACzCG,EAAgB,GAOpB,OANK,OAALF,QAAK,IAALA,KAAOjG,SAAQ,SAAAoG,GACbF,EAAYlG,SAAQ,SAAAqG,GAClBF,EAAc7F,KAAK8F,EAAO,IAAMC,SAI7BF,EA3E0BJ,CAAyBJ,GACpDH,EAAuBC,EAAQpE,KAAK,KAAO,IAAMqE,EAAQrE,KAAK,MAAQyE,SAI1E,IAAIjE,EAAM,GAyBV,OAxBAjB,OAAOC,KAAK2E,GAAwBxF,SAAQ,SAAAsG,GAC1C,IAAIC,EAAS,GACTC,EAAUF,EAAYvD,MAAM,KAChCwD,EAAOC,QAAUA,EACjBD,EAAOjC,UAAY,GACnB,IAAImC,EAA+C,GAC/CC,EAAc,EAClBlB,EAAuBc,GAAatG,SAAQ,SAAA2G,GAC1CF,EAAkBE,GAAeF,EAAkBE,GAAeF,EAAkBE,GAAe,EAAI,EACvGD,OAEF9F,OAAOC,KAAK4F,GAAmB7E,OAAO5B,SAAQ,SAAA4G,GAC5C,IAAMC,EAAgB1E,EAAiB5C,EAASqH,GAChDL,EAAOjC,UAAUhE,KAAjB,aACEwG,YAAaL,EAAkBG,GAAiBF,GAC7CG,OAIFtB,EAAc9E,SAAUO,IAAEC,KAAKsF,EAAOjC,WAAW,SAACA,GAAgB,OAAOtD,IAAEC,KAAKsE,GAAe,SAACwB,GAAmB,OAAOA,IAAiBzC,EAAUlC,cACxJP,EAAIvB,KAAKiG,MAIN,CAAE1E,OAET,MAAOmF,GACP,MAAO,CACLnF,IAAK,GACLoF,MAAOD,IAYN,SAASE,EAAT,EAAoDjC,GAA4B,IAAtD6B,EAAqD,EAArDA,YAC/B,GAAI7B,IAAWlH,EAAkBoJ,WAC/B,OAAsB,IAAdL,EAAqB,IAG7B,IACMM,EAAc,IAbxB,SAASC,EAAInE,EAAWC,GACtB,OAAU,IAANA,EACKD,EAEFmE,EAAIlE,EAAGD,EAAIC,GAQAkE,CAAkB,IAAdP,EAAmB,KAEvC,OAAOA,EAAcM,EAAc,IAAMA,E,wCCxUvCE,EAAYC,aAAW,SAACC,GAAD,OAAWC,YAAa,CACnDC,YAAa,CACXC,OAAQH,EAAMI,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWP,EAAMI,QAAQ,IAE3BI,KAAM,CACJ,uBAAwB,CACtBL,OAAQH,EAAMI,QAAQ,GACtBK,MAAO,cAKPC,EAActH,OAAOC,KAAKjD,GAOnBuK,EAAgB,SAAC,GAAiD,IAA/C5I,EAA8C,EAA9CA,QAAS6I,EAAqC,EAArCA,WACjCC,EAAUf,IAChB,OACE,oCACE,kBAACgB,EAAA,EAAD,CAAaC,UAAWF,EAAQX,aAC9B,kBAACc,EAAA,EAAD,CAAYC,QAAM,EAACC,GAAG,wBAAtB,WAGA,kBAACC,EAAA,EAAD,CACEC,QAAQ,uBACRF,GAAG,iBACHxH,MAAO3B,EACPsJ,SAAU,SAAC7B,GAAD,OAA8CoB,EAAWpB,EAAE8B,OAAO5H,QAC5E6H,cAAY,EACZR,UAAWF,EAAQP,aAGjBI,EAAYtG,OAAOlB,KAAI,SAAAnB,GACrB,OAAO,kBAACyJ,EAAA,EAAD,CAAUrH,IAAKpC,EAAS2B,MAAO3B,GAAUA,UCrCxD+H,EAAYC,aAAW,SAACC,GAAD,OAAWC,YAAa,CACnDC,YAAa,CACXC,OAAQH,EAAMI,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWP,EAAMI,QAAQ,IAE3BI,KAAM,CACJ,uBAAwB,CACtBL,OAAQH,EAAMI,QAAQ,GACtBK,MAAO,cAoFEgB,EAlEW,SAAC,GAA6I,IAA3IvJ,EAA0I,EAA1IA,QAASC,EAAiI,EAAjIA,QAASyF,EAAwH,EAAxHA,gBAAiB8D,EAAuG,EAAvGA,WAAYC,EAA2F,EAA3FA,WAAYC,EAA+E,EAA/EA,mBAAoBC,EAA2D,EAA3DA,OAAQC,EAAmD,EAAnDA,OAAQ/J,EAA2C,EAA3CA,QAAS6I,EAAkC,EAAlCA,WAC7HC,EAAUf,IAEViC,EAAmBC,IAAMC,aAAY,SAAClK,GAC1C8J,EAAO,IACPjB,EAAW7I,KACV,CAAC8J,EAAQjB,IAENsB,EAAkBF,IAAMC,aAAY,SAACE,GAEzC,IAAIpD,EADJ+C,EAAO,KAGL/C,EADE7G,GAAWC,EACJmC,EAAgBpC,EAASC,EAASyF,EAAiB7F,GFa3D,SAAyBqK,EAAkBrK,GAChD,IAAMsK,EAAgB/F,EAAe8F,EAAUrK,GAC3CuK,EAAW,GACXvI,EAAkC,GAYtC,OAXAsI,EAAc7J,SAAQ,SAAAV,GACGD,EAAoBC,EAAYC,GACxCS,SAAQ,SAAA+J,GACrB,IAAMpI,EAAMoI,EAAQvD,QAAQ5E,OAAOP,KAAK,KACnCE,EAAOI,KACVJ,EAAOI,GAAK,EACZmI,EAASxJ,KAAKyJ,UAIpBC,QAAQC,IAAIH,EAASrJ,QACd,CACLoB,IAAKiI,GE1BMI,CAAgB9E,EAAiB7F,IAEjC0H,OACTqC,EAAO/C,EAAOU,MAAMkD,SACpBd,EAAO,KAGPA,EAAO9C,EAAO1E,OAEf,CAACuD,EAAiB1F,EAASC,EAAS2J,EAAQD,EAAQ9J,IAEvD,OACE,oCACE,0BAAMgJ,UAAWF,EAAQL,KAAMoC,YAAU,EAACC,aAAa,OACrD,6BAEE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,aAAa,SAASC,QAAQ,SAAS7C,QAAS,GAC9D,kBAAC0C,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAIC,GAAI,GACrB,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,UACtB,kBAACH,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAIE,GAAI,EAAGD,GAAI,GAC5B,kBAACE,EAAA,EAAD,CAAWC,MAAM,WAAW5J,MAAOxB,EAASmJ,SAAU,SAAAkC,GAAK,OAAI7B,EAAW6B,EAAMjC,OAAO5H,QAAQ8J,WAAW,+CAG5G,kBAACV,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAIE,GAAI,EAAGD,GAAI,GAC5B,kBAACE,EAAA,EAAD,CAAWC,MAAM,WAAW5J,MAAOvB,EAASkJ,SAAU,SAAAkC,GAAK,OAAI5B,EAAW4B,EAAMjC,OAAO5H,WAEzF,kBAACoJ,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAIE,GAAI,EAAGD,GAAI,GAC5B,kBAACE,EAAA,EAAD,CAAWC,MAAM,mBAAmB5J,MAAOkE,EAAiByD,SAAU,SAAAkC,GAAK,OAAI3B,EAAmB2B,EAAMjC,OAAO5H,WAEjH,kBAACoJ,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAIE,GAAI,GACrB,kBAAC,EAAD,CAAerL,QAASA,EAAS6I,WAAYmB,OAMnD,kBAACe,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GACb,kBAACO,EAAA,EAAD,CAAQrG,QAAQ,YAAYrC,MAAM,UAAU2I,UAAW3L,EAAS4L,QAASzB,GAAzE,mB,uFCtFd,SAAS0B,GAAwBlI,EAAMC,EAAMkI,GACzC,OAAIlI,EAAEkI,GAAWnI,EAAEmI,IACP,EAERlI,EAAEkI,GAAWnI,EAAEmI,GACR,EAEJ,ECFX,IAAM/D,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6D,cAAe,CACbrD,MAAO,OACPsD,OAAQ,kBACRC,WAAY,QAEdxD,KAAM,CACJC,MAAO,QAETwD,MAAO,CACLxD,MAAO,OACPyD,aAAclE,EAAMI,QAAQ,IAE9B+D,MAAO,CACL9D,SAAU,KAEZ+D,eAAgB,CACdL,OAAQ,EACRM,KAAM,gBACNC,OAAQ,EACRnE,QAAS,EACToE,SAAU,SACVC,QAAS,EACTC,SAAU,WACVC,IAAK,GACLjE,MAAO,QAsBb,SAASkE,GAAkBC,GAA4B,IAC7C/D,EAAsF+D,EAAtF/D,QAASgE,EAA6ED,EAA7EC,MAAOhB,EAAsEe,EAAtEf,QAASiB,EAA6DF,EAA7DE,cADmB,EAC0CF,EAA9CG,uBADI,WAC0CH,EAAtBI,kBADpB,SAM9CC,EAAqB,sBACrBD,EAAa,CAAC,CAAEE,QAAS,SAAyBC,SAAS,EAAOC,gBAAgB,EAAM9B,MAAO,WAAY,IADtF,CAEzB,CAAE4B,QAAS,qBAAsBC,SAAS,EAAOC,gBAAgB,EAAO9B,MAAO,UAFtD,YAGrByB,EAAkB,CAAC,CAAEG,QAAS,cAA8BC,SAAS,EAAMC,gBAAgB,EAAO9B,MAAO,gBAAmB,KAGlI,OACE,kBAAC+B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGL,EAAU/L,KAAI,SAACqM,GAAD,OACb,kBAACC,GAAA,EAAD,CACErL,IAAKoL,EAASL,QACdO,MAAM,SACNjB,QAAQ,OACRkB,cAAe7B,IAAY0B,EAASL,SAAUL,GAE9C,kBAACc,GAAA,EAAD,CACEC,OAAQ/B,IAAY0B,EAASL,QAC7BW,UAAWhC,IAAY0B,EAASL,QAAUL,EAAQ,MAClDlB,SAvBemC,EAuBYP,EAASL,QAvBK,SAAC3B,GACpDuB,EAAcvB,EAAOuC,KAuBXC,cAAc,GAEbR,EAASjC,MACTO,IAAY0B,EAASL,QACpB,0BAAMnE,UAAWF,EAAQuD,gBACZ,SAAVS,EAAmB,oBAAsB,oBAE1C,OA/BU,IAACiB,OAgDtB,IAAME,GAAiBhE,IAAMiE,MAAK,YAAkJ,IAA/InJ,EAA8I,EAA9IA,UAAWoJ,EAAmI,EAAnIA,aAAmI,IAArHnB,uBAAqH,aAA7FC,kBAA6F,aAA1EmB,yBAA0E,MAAxD5P,EAAkBoJ,WAAsC,EAClLkB,EAAUf,KADwK,EAE9JkC,IAAMoE,SAAgB,OAFwI,mBAEjLvB,EAFiL,KAE1KwB,EAF0K,OAG1JrE,IAAMoE,SAAsB,UAH8H,mBAGjLvC,EAHiL,KAGxKyC,EAHwK,KASxL,OACE,kBAACC,GAAA,EAAD,CAAOC,KAAK,QAAQhC,QAAQ,QAC1B,kBAACG,GAAD,CACE9D,QAASA,EACTgE,MAAOA,EACPhB,QAASA,EACTiB,cAXoB,SAAC3C,EAAmC2D,GAE5DO,EADcxC,IAAYiC,GAAsB,QAAVjB,EACrB,OAAS,OAC1ByB,EAAWR,IASPf,gBAAiBA,EACjBC,WAAYA,IAEd,kBAACyB,GAAA,EAAD,KDxGC,SAAuBC,EAAYC,GACtC,IAAMC,EAAiBF,EAAMxN,KAAI,SAAC2N,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAOrD,OANAF,EAAexM,MAAK,SAACsB,EAAGC,GACpB,IAAMkJ,EAAQ8B,EAAWjL,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVkJ,EACOA,EACJnJ,EAAE,GAAKC,EAAE,MAEbiL,EAAe1N,KAAI,SAAC2N,GAAD,OAAQA,EAAG,MCkG/BE,CAAWjK,EDnHd,SAA8C+H,EAAchB,GAK/D,MAAiB,SAAVgB,EACD,SAACnJ,EAAGC,GAAJ,OAAUiI,GAAqBlI,EAAGC,EAAGkI,IACrC,SAACnI,EAAGC,GAAJ,OAAWiI,GAAqBlI,EAAGC,EAAGkI,IC4GhBmD,CAAcnC,EAAOhB,IAAU3K,KAAI,SAAC+N,GACxD,OAAO,kBAAC3B,EAAA,EAAD,CAAUnL,IAAK8M,EAAkBrM,QACrCoK,GAAc,kBAACQ,GAAA,EAAD,CAAWC,MAAM,UAAUjI,EAAiByJ,EAAmBf,IAC9E,kBAACV,GAAA,EAAD,CAAWC,MAAM,UACf,kBAACyB,GAAA,EAAD,CAAMC,MAAO,CAAEhM,gBAAiB8L,EAAkB9L,iBAAmB4F,UAAWF,EAAQiD,cAAeR,MAAO,kBAAC8D,GAAA,EAAD,CAAYhK,QAAQ,aAAa6J,EAAkB7L,uBAElK2J,GAAmB,kBAACS,GAAA,EAAD,CAAWC,MAAM,UAAU/F,EAAeuH,EAAmBd,aCzHlFkB,GAAS,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,WAE9C,OACE,oCACE,yBAAKzG,UAAU,2BAEZuG,EAAQpO,KAAI,YAAqC,IAAlCiC,EAAiC,EAAjCA,gBAAiBhB,EAAgB,EAAhBA,IAAKsN,EAAW,EAAXA,KACpC,OACE,yBAAK1G,UAAU,qBAAqBoG,MAAO,CAAEhM,mBAAmBhB,IAAKA,GACnE,0BAAMuN,KAAK,aAAY,2BAAID,SAMnC,yBAAK1G,UAAU,YACb,yBAAKA,UAAU,iBACZyG,EACAD,MAQIF,MC9BTM,GAAapN,EAAa/D,QAC1BsJ,GAAYC,aAAW,SAACC,GAAD,OAAWC,YAAa,CACnDC,YAAa,CACXC,OAAQH,EAAMI,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWP,EAAMI,QAAQ,IAE3BI,KAAM,CACJ,uBAAwB,CACtBL,OAAQH,EAAMI,QAAQ,GACtBK,MAAO,cAmEEmH,GAtDO,SAAC,GAAuE,IAAtE1B,EAAqE,EAArEA,aAAcnO,EAAuD,EAAvDA,QAAS6I,EAA8C,EAA9CA,WAAY7F,EAAkC,EAAlCA,MAAO8M,EAA2B,EAA3BA,SAC1DhH,EAAUf,KAEVxF,EAAkB8B,EAAwBrE,EAASgD,GAEzD,OACE,oCACE,kBAAC+H,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,UACtB,kBAACH,EAAA,EAAD,CAAM7I,MAAI,GACR,kBAAC,EAAD,CAAelC,QAASA,EAAS6I,WAAYA,KAE/C,kBAACkC,EAAA,EAAD,CAAM7I,MAAI,GACR,kBAAC6G,EAAA,EAAD,CAAaC,UAAWF,EAAQX,aAC9B,kBAACc,EAAA,EAAD,CAAYC,QAAM,EAACC,GAAG,sBAAtB,SAGA,kBAACC,EAAA,EAAD,CACEC,QAAQ,qBACRF,GAAG,eACHxH,MAAOqB,EACPsG,SAAU,SAAC7B,GAAD,OAA8CqI,EAASrI,EAAE8B,OAAO5H,QAC1E6H,cAAY,EACZR,UAAWF,EAAQP,aAElBvI,GACC4P,GAAW5P,GAAX,OAA8BmB,KAAI,SAAA6B,GAChC,OAAO,kBAACyG,EAAA,EAAD,CAAUrH,IAAKY,EAAOrB,MAAOqB,GAAQA,UAQxD,kBAAC+H,EAAA,EAAD,CAAMC,WAAS,EAAChC,UAAU,mBAAmB+G,WAAW,aAAa9E,aAAa,SAASC,QAAQ,SAAS7C,QAAS,GACnH,kBAAC0C,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAIE,GAAI,EAAG2E,GAAI,EAAG5E,GAAI,EAAG6E,UAAU,OAC5C,kBAAC,GAAD,CACEV,QAAS,CAAC,CACRnM,gBAAiB9E,EAAS0E,GAC1BZ,IAAK,MACLsN,KAAM1M,EAAQ,IAAMhD,IAEtBwP,aAEE,kBAACvB,GAAD,CAAgBlJ,UAAWxC,EAAiB4L,aAAcA,EAAcnB,iBAAiB,U,oKC1E9FkD,GAAa,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,QACjC,OACE,0BAAMpH,UAAU,cAAc4C,QAASwE,GACpCD,I,qBCSME,GAAW,SAAC,GAA2C,IAAzC7F,EAAwC,EAAxCA,QAAS8F,EAA+B,EAA/BA,UAC1BrJ,EAAiEuD,EAAjEvD,QAASlC,EAAwDyF,EAAxDzF,UAAW/E,EAA6CwK,EAA7CxK,QAASmO,EAAoC3D,EAApC2D,aAAcC,EAAsB5D,EAAtB4D,kBAM7CmB,EAAU,CALI3M,EAAiB5C,EAASiH,EAAQ,IAClCrE,EAAiB5C,EAASiH,EAAQ,KAIX9F,KAAI,SAACoP,EAAQpO,GACtD,MAAO,CACLuN,KAAMjK,EAAiB8K,EAAQpC,GAC/B/L,IAAKmO,EAAO1N,OAAO,IAAIV,EACvBiB,gBAAiBmN,EAAOnN,oBAG5B,OACE,kBAAC,GAAD,CACEmM,QAASA,EACTE,WAAY,kBAAC,GAAD,CAAYW,QAbJ,WACtBE,EAAU9F,IAY0C2F,KAAM,kBAAC,KAAD,QACxDX,aAAc,kBAACvB,GAAD,CAAgBlJ,UAAWA,EAAWoJ,aAAcA,EAAcC,kBAAmBA,OClB5FoC,GAAcvG,IAAMiE,MAAM,YAAyF,IAAvF5L,EAAsF,EAAtFA,IAAKmO,EAAiF,EAAjFA,IAAKzQ,EAA4E,EAA5EA,QAASmO,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,kBAAmBkC,EAAkC,EAAlCA,UAC3F,OACE,kBAACvF,EAAA,EAAD,CAAMC,WAAS,EAAChC,UAAU,mBAAmB+G,WAAW,aAAa9E,aAAa,SAASC,QAAQ,SAAS7C,QAAS,GACjH,kBAAC0C,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,IACb,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,EAAG0H,WAAW,aAAa9E,aAAa,SAASC,QAAQ,UAC/EuF,GAAO,kBAACpB,GAAA,EAAD,CAAYrM,MAAM,QAAQqC,QAAQ,MAAMoL,GAC/CnO,EAAInB,KAAI,SAAA6F,GAAM,OACb,kBAAC+D,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAIE,GAAI,EAAG2E,GAAI,EAAG5E,GAAI,EAAGhJ,IAAK4E,EAAOC,QAAQnF,KAAK,KAAMmO,UAAU,OAC/E,kBAAC,GAAD,CAAU7N,IAAK4E,EAAOC,QAAQnF,KAAK,KAAM0I,QAAO,aAAIxK,UAASmO,eAAcC,qBAAsBpH,GAAUsJ,UAAWA,c,8BCZzHI,GAAiB,SAAC,GAA8K,IAA5KlG,EAA2K,EAA3KA,QAAS4D,EAAkK,EAAlKA,kBAAmBuC,EAA+I,EAA/IA,WAAYxC,EAAmI,EAAnIA,aACnEyC,EAAS,GACbpG,EAAQzF,UAAUtE,SAAQ,SAACsE,GACzB,IAAM/B,EAAQ+B,EAAU/B,MACxB4N,EAAO5N,GAAS4N,EAAO5N,GAAS4N,EAAO5N,GAAS+B,EAAUwC,YAAcxC,EAAUwC,eAJsH,IAMlMN,EAAqBuD,EAArBvD,QAASjH,EAAYwK,EAAZxK,QAGXuP,EAAU,CAFI3M,EAAiB5C,EAASiH,EAAQ,IAClCrE,EAAiB5C,EAASiH,EAAQ,KACX9F,KAAI,SAACoP,GAC9C,MAAO,CACLb,KAAMjK,EAAiB8K,EAAQpC,GAC/B/L,IAAKmO,EAAO1N,OACZO,gBAAiBmN,EAAOnN,oBAItByN,EAAiBxP,OAAOC,KAAKsP,GAAQzP,KAAI,SAAC6B,GAC9C,MAAO,CACLH,OAAQG,EACRK,mBAAoBL,EACpBI,gBAAiB9E,EAAS0E,GAC1BA,QACAuE,YAAaqJ,EAAO5N,OAIlB8N,EAAUD,EAAe1P,KAAI,SAAC4D,GAClC,MAAO,CACL4K,KAAM5K,EAAU/B,MAChBrB,MAAOoD,EAAUwC,YACjBvE,MAAO1E,EAASyG,EAAU/B,WAIxB+N,EAASC,KAAKC,GAAK,IAezB,OAAQ,oCACN,yBAAKjI,UAAU,8BAGb,kBAAC,GAAD,CACEuG,QAASA,EACTE,WAAY,kBAAC,GAAD,CAAYU,KAAM,kBAAC,KAAD,MAAeC,QAASO,IACtDnB,aACE,oCACE,kBAACzE,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAI6E,GAAI,GACrB,yBAAKhH,UAAU,iBACb,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAKxG,KAAMsO,EAASI,QAAQ,QAAQ3F,MA5B1B,SAAC,GAEA,IAD7B4F,EAC4B,EAD5BA,GAAIC,EACwB,EADxBA,GAAIC,EACoB,EADpBA,SAAUC,EACU,EADVA,YAAaC,EACH,EADGA,YAAaC,EAChB,EADgBA,QAEtCC,GADsB,EADyB1C,MAEtCuC,EAA4C,IAA7BC,EAAcD,IACtCI,EAAIP,EAAKM,EAAST,KAAKW,KAAKN,EAAWN,GACvCa,EAAIR,EAAKK,EAAST,KAAKa,KAAKR,EAAWN,GAE7C,OACE,0BAAMW,EAAGA,EAAGE,EAAGA,EAAGE,KAAK,QAAQC,WAAYL,EAAIP,EAAK,QAAU,MAAOa,iBAAiB,UAAUC,SAAS,QAAzG,UACiB,IAAVT,EADP,OAoBkFU,WAAW,GAEzEpB,EAAQ3P,KAAI,SAACgR,EAAOpD,GAAR,OAAkB,kBAAC,KAAD,CAAM3M,IAAG,eAAU2M,GAAS+C,KAAMhB,EAAQ/B,GAAO/L,gBAO3F,kBAAC+H,EAAA,EAAD,CAAM7I,MAAI,EAACiJ,GAAI,GAAI6E,GAAI,GACrB,kBAAC/B,GAAD,CACElJ,UAAW8L,EACX5D,YAAY,EACZkB,aAAc5P,EAAaoH,OAC3ByI,kBAAmBA,YCtF/BrG,GAAYC,aAAW,SAACC,GAAD,OAAWC,YAAa,CACnDC,YAAa,CACXC,OAAQH,EAAMI,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWP,EAAMI,QAAQ,IAE3BI,KAAM,CACJ,uBAAwB,CACtBL,OAAQH,EAAMI,QAAQ,GACtBK,MAAO,cAWA0J,GAAiB,SAAC,GAAsE,IAArE1M,EAAoE,EAApEA,OAAQ2M,EAA4D,EAA5DA,cAAe9G,EAA6C,EAA7CA,MAAO+G,EAAsC,EAAtCA,UACtDxJ,EAAUf,KAEhB,OACE,oCACE,kBAACgB,EAAA,EAAD,CAAaC,UAAWF,EAAQX,aAC9B,kBAACc,EAAA,EAAD,CAAYC,QAAM,EAACC,GAAG,uBACnBoC,GAEH,kBAACnC,EAAA,EAAD,CACEC,QAAQ,sBACR1H,MAAO+D,EACP4D,SAAU,SAAC7B,GAAD,OAA8C6K,EAAU7K,EAAE8B,OAAO5H,QAC3E6H,cAAY,EACZR,UAAWF,EAAQP,aAElBlH,OAAOC,KAAK+Q,GAAelR,KAAI,SAAAuE,GAAM,OAAI,kBAAC+D,EAAA,EAAD,CAAUrH,IAAKsD,EAAQ/D,MAAO+D,GAASA,UChBrFuC,GAAQsK,aAAe,CAC3BC,WAAY,CACVC,WAAY,YACZR,SAAU,GACVS,eAAgB,QAElBC,QAAS,CACPC,QAAS,CAEPC,KAAMC,KAAO,MAEfC,UAAW,CAETF,KAAM,cAiJGG,OA5If,WAAgB,IAAD,EACa3E,mBAAS,GADtB,mBACN1M,EADM,KACCsR,EADD,KAEb,SAASC,EAAUnE,GACjB,MAAO,CACL5F,GAAG,uBAAD,OAAyB4F,GAC3B,gBAAgB,4BAAhB,OAA6CA,IAIjD,IATa,EAgB4BV,mBAAU8E,aAAaC,QAAQ,4BAA8B,UAhBzF,mBAgBNjF,EAhBM,KAgBQkF,EAhBR,OAiBsChF,mBAAU8E,aAAaC,QAAQ,0BAA4B,cAjBjG,mBAiBNhF,EAjBM,KAiBakF,EAjBb,OAkBiBjF,mBAAS,IAlB1B,mBAkBNlO,EAlBM,KAkBGwJ,EAlBH,OAmBiB0E,mBAAS,IAnB1B,mBAmBNjO,EAnBM,KAmBGwJ,EAnBH,OAoBSyE,mBAAS,IApBlB,mBAoBNoC,EApBM,KAoBD1G,EApBC,OAqBiCsE,mBAAS,IArB1C,mBAqBNxI,EArBM,KAqBWgE,EArBX,OAsBSwE,mBAAS,IAtBlB,mBAsBN/L,EAtBM,KAsBDwH,EAtBC,KAuBPnB,EAActH,OAAOC,KAAKjD,GAvBnB,EAwBiBgQ,mBAAS1F,EAAY,IAxBtC,mBAwBN3I,EAxBM,KAwBG6I,EAxBH,OAyBawF,mBAAS7L,EAAa/D,QAAQuB,GAArB,OAAwC,IAzB9D,mBAyBNgD,EAzBM,KAyBC8M,EAzBD,OA0BqBzB,oBAAS,GA1B9B,mBA0BNkF,EA1BM,KA0BKC,EA1BL,QA2B2BnF,mBAAS,IA3BpC,qBA2BNoF,GA3BM,MA2BQC,GA3BR,MA6BPC,GAAgB1J,IAAMC,aAAY,SAAClK,GACvC8J,EAAO,IACPjB,EAAW7I,KACV,CAAC8J,EAAQjB,IAEN+K,GAAc,WAClBJ,GAAa,IAGTlD,GAAYrG,IAAMC,aAAY,SAACM,GACnCkJ,GAAgBlJ,GAChBgJ,GAAa,KACZ,CAACE,GAAiBF,IAGfK,GAAuB5J,IAAMC,aAAY,SAACxE,GAC9C4N,EAAsB5N,GACtByN,aAAaW,QAAQ,wBAAyBpO,KAC7C,CAAC4N,IAEES,GAAkB9J,IAAMC,aAAY,SAACxE,GACzC2N,EAAiB3N,GACjByN,aAAaW,QAAQ,0BAA2BpO,KAC/C,CAAC2N,IAEJ,OACE,oCACE,0BAAMW,KAAK,4DAA4DC,IAAI,aAAaC,KAAK,aAC7F,kBAACC,GAAA,EAAD,CAAelM,MAAOA,IACpB,yBAAKe,UAAU,OACb,kBAACoL,GAAA,EAAD,CAAQ1H,SAAS,SAAS1J,MAAM,aAC9B,kBAACqR,GAAA,EAAD,CACE1S,MAAOA,EACP2H,SArDS,SAACkC,EAA8B8I,GAClDrB,EAASqB,IAqDCC,eAAe,UACfC,UAAU,UACVC,aAAW,+BACXC,UAAQ,GAER,kBAACC,GAAA,EAAD,eAAKxE,KAAM,kBAAC,KAAD,OAAyB+C,EAAU,KAC9C,kBAACyB,GAAA,EAAD,eAAKxE,KAAM,kBAAC,KAAD,OAAoB+C,EAAU,KACzC,kBAACyB,GAAA,EAAD,eAAKxE,KAAM,kBAAC,KAAD,OAAsB+C,EAAU,OAI/C,kBAAC,KAAD,CACE0B,KAAK,IACL7F,MAAOpN,EACPkT,cAhEgB,SAAC9F,GACzBkE,EAASlE,KAiED,yBAAK/F,UAAU,aACb,kBAAC,EAAD,CACE7I,QAASA,EACTC,QAASA,EACTuJ,WAAYA,EACZC,WAAYA,EACZ/D,gBAAiBA,EACjBgE,mBAAoBA,EACpBE,OAAQA,EACRD,OAAQA,EACR9J,QAASA,EACT6I,WAAY8K,KAEd,kBAACnD,GAAD,CAAalO,IAAKA,EAAKmO,IAAKA,EAAKzQ,QAASA,EAASmO,aAAcA,EAAcC,kBAAmBA,EAAmBkC,UAAWA,KAChI,kBAACwE,GAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjBC,KAAM1B,EACN2B,QAAStB,GACTuB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,oCAAE,kBAAC,GAAD,CAAgB/K,QAASiJ,GAAcrF,kBAAmBA,EAAmBD,aAAcA,EAAcwC,WAAYiD,QAG3H,yBAAK5K,UAAU,aACb,kBAAC,GAAD,CACEmF,aAAcA,EACdnO,QAASA,EACT6I,WAAY8K,GACZ3Q,MAAOA,EACP8M,SAAUA,KAGd,yBAAK9G,UAAU,aACb,kBAAC,GAAD,CACEtD,OAAQyI,EACR5C,MAAM,iBACN8G,cAAe9T,EACf+T,UAAWyB,KAEb,kBAAC,GAAD,CACErO,OAAQ0I,EACR7C,MAAM,sBACN8G,cAAe7T,EACf8T,UAAWuB,WC9JP2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9O,GACL+C,QAAQ/C,MAAMA,EAAMkD,c","file":"static/js/main.7ea7d5ca.chunk.js","sourcesContent":["export enum Color {\r\n  black = \"black\",\r\n  blue = \"blue\",\r\n  orange = \"orange\",\r\n  red = \"red\",\r\n  yellow = \"yellow\",\r\n  purple = \"purple\",\r\n  green = \"green\",\r\n  pink = \"pink\",\r\n  white = \"white\",\r\n}\r\n\r\nexport enum Species {\r\n  hyacinth = 'hyacinth',\r\n  windflower = 'windflower',\r\n  mum = 'mum',\r\n  lily = 'lily',\r\n  pansy = 'pansy',\r\n  rose = 'rose',\r\n  tulip = 'tulip',\r\n  cosmos = 'cosmos',\r\n}\r\n\r\nexport enum bgColors { \r\n  black= '#999',\r\n  blue= '#36f',\r\n  orange= '#f93',\r\n  red= \"#f33\",\r\n  yellow= \"#ff3\",\r\n  purple= \"#96f\",\r\n  green= \"#9c0\",\r\n  pink= \"#f9f\",\r\n  white= \"#fff\",\r\n}\r\n\r\nexport enum GenomeFormat {\r\n  binary = 'binary',\r\n  condensed = 'condensed',\r\n  alpha = 'alpha',\r\n}\r\n\r\nexport enum ProbabilityFormat {\r\n  percentage = 'percentage',\r\n  fraction= 'fraction'\r\n}","export default { flowers:{\"hyacinth\":{\"island\":{\"orange\":\"01_11_00\",\"pink\":\"01_00_01\",\"blue\":\"11_01_00\"},\"seed\":{\"white\":\"00_00_01\",\"yellow\":\"00_11_00\",\"red\":\"11_00_01\"},\"genomes\":{\"01_01_01\":{\"color\":\"yellow\"},\"01_00_01\":{\"color\":\"pink\",\"island\":1},\"01_01_11\":{\"color\":\"yellow\"},\"01_00_11\":{\"color\":\"white\"},\"01_11_01\":{\"color\":\"yellow\"},\"01_11_11\":{\"color\":\"yellow\"},\"11_01_00\":{\"island\":1,\"color\":\"blue\"},\"11_00_00\":{\"color\":\"red\"},\"00_11_00\":{\"seed\":1,\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"yellow\"},\"11_11_00\":{\"color\":\"purple\"},\"01_01_00\":{\"color\":\"orange\"},\"01_00_00\":{\"color\":\"red\"},\"01_11_00\":{\"color\":\"orange\",\"island\":1},\"11_01_11\":{\"color\":\"red\"},\"11_00_11\":{\"color\":\"red\"},\"11_00_01\":{\"seed\":1,\"color\":\"red\"},\"11_01_01\":{\"color\":\"red\"},\"00_11_11\":{\"color\":\"yellow\"},\"00_11_01\":{\"color\":\"yellow\"},\"00_01_11\":{\"color\":\"white\"},\"00_00_11\":{\"color\":\"blue\"},\"00_01_01\":{\"color\":\"yellow\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"11_11_11\":{\"color\":\"purple\"},\"11_11_01\":{\"color\":\"purple\"}},\"colors\":[\"blue\",\"orange\",\"pink\",\"purple\",\"red\",\"white\",\"yellow\"]},\"windflower\":{\"colors\":[\"blue\",\"orange\",\"pink\",\"purple\",\"red\",\"white\"],\"island\":{\"blue\":\"01_00_11\",\"pink\":\"11_11_01\"},\"seed\":{\"white\":\"00_00_01\",\"orange\":\"00_11_00\",\"red\":\"11_00_00\"},\"genomes\":{\"01_11_00\":{\"color\":\"orange\"},\"01_00_00\":{\"color\":\"red\"},\"01_01_00\":{\"color\":\"pink\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"00_01_01\":{\"color\":\"orange\"},\"00_00_11\":{\"color\":\"blue\"},\"00_01_11\":{\"color\":\"blue\"},\"11_11_01\":{\"island\":1,\"color\":\"pink\"},\"11_11_11\":{\"color\":\"purple\"},\"11_01_01\":{\"color\":\"red\"},\"11_00_01\":{\"color\":\"red\"},\"11_00_11\":{\"color\":\"purple\"},\"11_01_11\":{\"color\":\"purple\"},\"00_11_01\":{\"color\":\"orange\"},\"00_11_11\":{\"color\":\"orange\"},\"01_11_11\":{\"color\":\"orange\"},\"01_11_01\":{\"color\":\"orange\"},\"01_00_11\":{\"color\":\"blue\",\"island\":1},\"01_01_11\":{\"color\":\"pink\"},\"01_00_01\":{\"color\":\"red\"},\"01_01_01\":{\"color\":\"pink\"},\"00_00_00\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"orange\"},\"11_11_00\":{\"color\":\"pink\"},\"11_01_00\":{\"color\":\"red\"},\"11_00_00\":{\"seed\":1,\"color\":\"red\"},\"00_11_00\":{\"color\":\"orange\",\"seed\":1}}},\"cosmos\":{\"island\":{\"orange\":\"11_01_01\",\"pink\":\"01_01_11\"},\"seed\":{\"white\":\"00_00_01\",\"yellow\":\"00_11_01\",\"red\":\"11_00_00\"},\"genomes\":{\"01_00_01\":{\"color\":\"pink\"},\"01_01_01\":{\"color\":\"orange\"},\"01_01_11\":{\"island\":1,\"color\":\"pink\"},\"01_00_11\":{\"color\":\"pink\"},\"01_11_01\":{\"color\":\"orange\"},\"01_11_11\":{\"color\":\"orange\"},\"11_00_00\":{\"color\":\"red\",\"seed\":1},\"11_01_00\":{\"color\":\"orange\"},\"00_11_00\":{\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"yellow\"},\"11_11_00\":{\"color\":\"black\"},\"01_00_00\":{\"color\":\"pink\"},\"01_01_00\":{\"color\":\"orange\"},\"01_11_00\":{\"color\":\"orange\"},\"11_00_11\":{\"color\":\"red\"},\"11_01_11\":{\"color\":\"red\"},\"11_01_01\":{\"island\":1,\"color\":\"orange\"},\"11_00_01\":{\"color\":\"red\"},\"00_11_11\":{\"color\":\"yellow\"},\"00_11_01\":{\"seed\":1,\"color\":\"yellow\"},\"00_01_11\":{\"color\":\"white\"},\"00_00_11\":{\"color\":\"white\"},\"00_00_01\":{\"seed\":1,\"color\":\"white\"},\"00_01_01\":{\"color\":\"yellow\"},\"11_11_11\":{\"color\":\"red\"},\"11_11_01\":{\"color\":\"black\"}},\"colors\":[\"black\",\"orange\",\"pink\",\"red\",\"white\",\"yellow\"]},\"pansy\":{\"colors\":[\"blue\",\"orange\",\"purple\",\"red\",\"white\",\"yellow\"],\"seed\":{\"red\":\"11_00_00\",\"yellow\":\"00_11_00\",\"white\":\"00_00_01\"},\"island\":{\"orange\":\"11_11_01\",\"blue\":\"01_00_11\"},\"genomes\":{\"11_01_00\":{\"color\":\"red\"},\"11_00_00\":{\"seed\":1,\"color\":\"red\"},\"00_11_00\":{\"seed\":1,\"color\":\"yellow\"},\"00_01_00\":{\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"11_11_00\":{\"color\":\"orange\"},\"01_01_01\":{\"color\":\"orange\"},\"01_00_01\":{\"color\":\"red\"},\"01_00_11\":{\"island\":1,\"color\":\"blue\"},\"01_01_11\":{\"color\":\"orange\"},\"01_11_01\":{\"color\":\"yellow\"},\"01_11_11\":{\"color\":\"yellow\"},\"11_00_11\":{\"color\":\"purple\"},\"11_01_11\":{\"color\":\"purple\"},\"11_01_01\":{\"color\":\"red\"},\"11_00_01\":{\"color\":\"red\"},\"00_11_11\":{\"color\":\"yellow\"},\"00_11_01\":{\"color\":\"yellow\"},\"00_00_11\":{\"color\":\"blue\"},\"00_01_11\":{\"color\":\"blue\"},\"00_01_01\":{\"color\":\"yellow\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"11_11_11\":{\"color\":\"purple\"},\"11_11_01\":{\"color\":\"orange\",\"island\":1},\"01_00_00\":{\"color\":\"red\"},\"01_01_00\":{\"color\":\"orange\"},\"01_11_00\":{\"color\":\"yellow\"}}},\"lily\":{\"colors\":[\"black\",\"orange\",\"pink\",\"red\",\"white\",\"yellow\"],\"seed\":{\"yellow\":\"00_11_00\",\"white\":\"00_00_11\",\"red\":\"11_00_01\"},\"island\":{\"orange\":\"11_11_01\",\"black\":\"11_01_00\",\"pink\":\"11_01_11\"},\"genomes\":{\"01_11_00\":{\"color\":\"orange\"},\"01_01_00\":{\"color\":\"orange\"},\"01_00_00\":{\"color\":\"red\"},\"00_00_11\":{\"color\":\"white\",\"seed\":1},\"00_01_11\":{\"color\":\"white\"},\"00_00_01\":{\"color\":\"white\"},\"00_01_01\":{\"color\":\"white\"},\"11_11_11\":{\"color\":\"white\"},\"11_11_01\":{\"color\":\"orange\",\"island\":1},\"11_01_11\":{\"color\":\"pink\",\"island\":1},\"11_00_11\":{\"color\":\"pink\"},\"11_01_01\":{\"color\":\"red\"},\"11_00_01\":{\"seed\":1,\"color\":\"red\"},\"00_11_11\":{\"color\":\"white\"},\"00_11_01\":{\"color\":\"yellow\"},\"01_11_01\":{\"color\":\"yellow\"},\"01_11_11\":{\"color\":\"yellow\"},\"01_01_01\":{\"color\":\"yellow\"},\"01_00_01\":{\"color\":\"pink\"},\"01_01_11\":{\"color\":\"yellow\"},\"01_00_11\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"11_11_00\":{\"color\":\"orange\"},\"11_01_00\":{\"island\":1,\"color\":\"black\"},\"11_00_00\":{\"color\":\"black\"},\"00_11_00\":{\"seed\":1,\"color\":\"yellow\"}}},\"tulip\":{\"colors\":[\"black\",\"orange\",\"pink\",\"purple\",\"red\",\"white\",\"yellow\"],\"island\":{\"black\":\"11_01_00\",\"orange\":\"01_11_00\",\"pink\":\"01_00_01\"},\"genomes\":{\"00_11_11\":{\"color\":\"yellow\"},\"00_11_01\":{\"color\":\"yellow\"},\"11_00_11\":{\"color\":\"red\"},\"11_01_11\":{\"color\":\"red\"},\"11_00_01\":{\"seed\":1,\"color\":\"red\"},\"11_01_01\":{\"color\":\"red\"},\"11_11_11\":{\"color\":\"purple\"},\"11_11_01\":{\"color\":\"purple\"},\"00_00_11\":{\"color\":\"white\"},\"00_01_11\":{\"color\":\"white\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"00_01_01\":{\"color\":\"yellow\"},\"01_00_00\":{\"color\":\"red\"},\"01_01_00\":{\"color\":\"orange\"},\"01_11_00\":{\"island\":1,\"color\":\"orange\"},\"00_11_00\":{\"color\":\"yellow\",\"seed\":1},\"11_01_00\":{\"color\":\"black\",\"island\":1},\"11_00_00\":{\"color\":\"black\"},\"11_11_00\":{\"color\":\"purple\"},\"00_00_00\":{\"color\":\"white\"},\"00_01_00\":{\"color\":\"yellow\"},\"01_01_01\":{\"color\":\"yellow\"},\"01_00_01\":{\"island\":1,\"color\":\"pink\"},\"01_00_11\":{\"color\":\"white\"},\"01_01_11\":{\"color\":\"yellow\"},\"01_11_01\":{\"color\":\"yellow\"},\"01_11_11\":{\"color\":\"yellow\"}},\"seed\":{\"red\":\"11_00_01\",\"yellow\":\"00_11_00\",\"white\":\"00_00_01\"}},\"rose\":{\"island\":{\"pink\":\"11_00_11_11\",\"orange\":\"11_11_01_01\"},\"seed\":{\"white\":\"00_00_01_00\",\"yellow\":\"00_11_00_00\",\"red\":\"11_00_00_01\"},\"genomes\":{\"00_01_11_11\":{\"color\":\"purple\"},\"00_00_01_11\":{\"color\":\"white\"},\"00_00_00_00\":{\"color\":\"white\"},\"01_11_11_01\":{\"color\":\"pink\"},\"11_11_11_11\":{\"color\":\"white\"},\"11_00_11_11\":{\"color\":\"pink\",\"island\":1},\"00_11_00_00\":{\"seed\":1,\"color\":\"yellow\"},\"01_00_11_01\":{\"color\":\"pink\"},\"01_01_01_01\":{\"color\":\"pink\"},\"11_01_01_11\":{\"color\":\"white\"},\"11_01_00_00\":{\"color\":\"orange\"},\"00_11_01_11\":{\"color\":\"yellow\"},\"01_11_01_00\":{\"color\":\"orange\"},\"00_01_00_01\":{\"color\":\"yellow\"},\"11_11_00_01\":{\"color\":\"orange\"},\"01_11_00_11\":{\"color\":\"yellow\"},\"01_00_00_11\":{\"color\":\"white\"},\"11_00_00_01\":{\"seed\":1,\"color\":\"red\"},\"01_00_01_00\":{\"color\":\"red\"},\"01_01_11_00\":{\"color\":\"red\"},\"00_00_00_11\":{\"color\":\"white\"},\"11_11_11_00\":{\"color\":\"blue\"},\"00_01_11_00\":{\"color\":\"purple\"},\"00_00_01_00\":{\"seed\":1,\"color\":\"white\"},\"01_01_00_01\":{\"color\":\"yellow\"},\"11_01_00_11\":{\"color\":\"yellow\"},\"00_11_01_00\":{\"color\":\"yellow\"},\"11_00_11_00\":{\"color\":\"black\"},\"00_11_00_11\":{\"color\":\"yellow\"},\"11_01_01_00\":{\"color\":\"red\"},\"00_01_01_01\":{\"color\":\"white\"},\"01_11_00_00\":{\"color\":\"orange\"},\"00_00_11_01\":{\"color\":\"purple\"},\"11_11_01_01\":{\"island\":1,\"color\":\"orange\"},\"01_11_01_11\":{\"color\":\"yellow\"},\"01_00_01_11\":{\"color\":\"white\"},\"11_00_01_01\":{\"color\":\"red\"},\"11_01_11_01\":{\"color\":\"red\"},\"01_01_11_11\":{\"color\":\"purple\"},\"00_11_11_01\":{\"color\":\"white\"},\"01_00_00_00\":{\"color\":\"red\"},\"11_11_00_00\":{\"color\":\"orange\"},\"00_00_11_11\":{\"color\":\"purple\"},\"00_01_01_11\":{\"color\":\"white\"},\"00_01_00_00\":{\"color\":\"yellow\"},\"11_11_01_11\":{\"color\":\"yellow\"},\"01_11_01_01\":{\"color\":\"yellow\"},\"11_01_11_11\":{\"color\":\"purple\"},\"01_01_11_01\":{\"color\":\"pink\"},\"01_00_01_01\":{\"color\":\"pink\"},\"11_00_01_11\":{\"color\":\"pink\"},\"00_11_11_11\":{\"color\":\"white\"},\"11_00_00_00\":{\"color\":\"black\"},\"00_00_00_01\":{\"color\":\"white\"},\"01_11_11_00\":{\"color\":\"red\"},\"01_01_00_11\":{\"color\":\"yellow\"},\"11_01_00_01\":{\"color\":\"orange\"},\"01_01_01_00\":{\"color\":\"red\"},\"01_00_11_00\":{\"color\":\"red\"},\"00_11_00_01\":{\"color\":\"yellow\"},\"00_01_00_11\":{\"color\":\"yellow\"},\"11_11_01_00\":{\"color\":\"orange\"},\"11_11_00_11\":{\"color\":\"yellow\"},\"01_11_00_01\":{\"color\":\"yellow\"},\"00_00_11_00\":{\"color\":\"purple\"},\"00_01_01_00\":{\"color\":\"white\"},\"01_00_00_01\":{\"color\":\"pink\"},\"00_11_11_00\":{\"color\":\"white\"},\"11_00_00_11\":{\"color\":\"pink\"},\"11_01_11_00\":{\"color\":\"black\"},\"11_00_01_00\":{\"color\":\"black\"},\"00_00_01_01\":{\"color\":\"white\"},\"00_01_11_01\":{\"color\":\"purple\"},\"01_11_11_11\":{\"color\":\"white\"},\"11_11_11_01\":{\"color\":\"red\"},\"01_01_01_11\":{\"color\":\"white\"},\"11_01_01_01\":{\"color\":\"red\"},\"11_00_11_01\":{\"color\":\"red\"},\"01_00_11_11\":{\"color\":\"purple\"},\"00_11_01_01\":{\"color\":\"yellow\"},\"01_01_00_00\":{\"color\":\"orange\"}},\"colors\":[\"black\",\"blue\",\"orange\",\"pink\",\"purple\",\"red\",\"white\",\"yellow\"]},\"mum\":{\"colors\":[\"green\",\"pink\",\"purple\",\"red\",\"white\",\"yellow\"],\"seed\":{\"red\":\"11_00_00\",\"white\":\"00_00_01\",\"yellow\":\"00_11_00\"},\"island\":{\"pink\":\"01_01_11\",\"purple\":\"11_01_01\"},\"genomes\":{\"11_11_01\":{\"color\":\"green\"},\"11_11_11\":{\"color\":\"red\"},\"00_00_01\":{\"color\":\"white\",\"seed\":1},\"00_01_01\":{\"color\":\"yellow\"},\"00_01_11\":{\"color\":\"white\"},\"00_00_11\":{\"color\":\"purple\"},\"00_11_01\":{\"color\":\"yellow\"},\"00_11_11\":{\"color\":\"yellow\"},\"11_00_01\":{\"color\":\"red\"},\"11_01_01\":{\"color\":\"purple\",\"island\":1},\"11_00_11\":{\"color\":\"red\"},\"11_01_11\":{\"color\":\"red\"},\"01_11_00\":{\"color\":\"purple\"},\"01_01_00\":{\"color\":\"yellow\"},\"01_00_00\":{\"color\":\"pink\"},\"11_11_00\":{\"color\":\"green\"},\"00_01_00\":{\"color\":\"yellow\"},\"00_00_00\":{\"color\":\"white\"},\"00_11_00\":{\"color\":\"yellow\",\"seed\":1},\"11_01_00\":{\"color\":\"purple\"},\"11_00_00\":{\"color\":\"red\",\"seed\":1},\"01_11_11\":{\"color\":\"purple\"},\"01_11_01\":{\"color\":\"purple\"},\"01_01_11\":{\"island\":1,\"color\":\"pink\"},\"01_00_11\":{\"color\":\"pink\"},\"01_01_01\":{\"color\":\"red\"},\"01_00_01\":{\"color\":\"pink\"}}}}}","import * as data from './flowers';\r\nimport { GenomeData, Offspring, Pairing, VariantMap, PartialOffspring } from './types';\r\nimport { Species, Color, bgColors, GenomeFormat, ProbabilityFormat } from './enums';\r\nimport _ from 'lodash';\r\nconst memoGeneCombos: { [key: string]: string[] } = {\r\n  '0000': ['00'],\r\n  '0001': ['00', '01'],\r\n  '0011': ['01'],\r\n  '0100': ['00', '01'],\r\n  '0101': ['00', '01', '01', '11'],\r\n  '0111': ['01', '11'],\r\n  '1100': ['01'],\r\n  '1101': ['01', '11'],\r\n  '1111': ['11']\r\n};\r\n\r\nconst numeral_map: { [key: number]: string } = {\r\n  0: '00',\r\n  1: '01',\r\n  2: '11'\r\n}\r\n\r\nconst rpair = ['r', 'R'];\r\nconst ypair = ['y', 'Y'];\r\nconst wpair = ['W', 'w'];\r\nconst spair = ['s', 'S'];\r\nconst rys = [rpair, ypair, spair];\r\nconst ryw = [rpair, ypair, wpair];\r\nconst alphaAlleles: { [key in Species]: string[][] } = {\r\n  rose: [rpair, ypair, wpair, spair],\r\n  cosmos: [rpair, ypair, spair],\r\n  lily: rys,\r\n  pansy: ryw,\r\n  tulip: rys,\r\n  hyacinth: ryw,\r\n  mum: ryw,\r\n  windflower: [rpair, ['o', 'O'], wpair]\r\n}\r\n\r\nexport function getParentsForGenome(childGenes: string[], species: Species) {\r\n  const parentGeneCombos = childGenes.map(gene => {\r\n    return(Object.keys(memoGeneCombos).filter(geneCombo => {\r\n      return _.some(memoGeneCombos[geneCombo], value  => {return value === gene}) \r\n    }))\r\n  });\r\n  const { parent1, parent2 } = constructParentsFromCombos(parentGeneCombos, [[]], [[]]);\r\n  const parent1binary = parent1.map(genes => genes.join('_'));\r\n  const parent2binary = parent2.map(genes => genes.join('_'));\r\n  let exists: {[key: string]: number} = {};\r\n\r\n  let allPairings = [] as Pairing[];\r\n  parent1binary.forEach((item, idx) => {\r\n    const key =[parent1binary[idx], parent2binary[idx]].sort().join('x');\r\n    if (!exists[key]) {\r\n      exists[key]=1;\r\n      const { res } = possibleGenomes(parent1binary[idx], parent2binary[idx], '', species);\r\n      allPairings = allPairings.concat(res);\r\n    }\r\n  })\r\n  return allPairings;\r\n}\r\n\r\nexport function possibleParents(children: string, species: Species): { res: Pairing[], error?: Error } {\r\n  const childrenGenes = parseGenomeSet(children, species);\r\n  let pairings = [] as Pairing[];\r\n  let exists: {[key: string]: number} = {};\r\n  childrenGenes.forEach(childGenes => {\r\n    const parentPairings = getParentsForGenome(childGenes, species)\r\n    parentPairings.forEach(pairing => {\r\n      const key = pairing.parents.sort().join('x');\r\n      if (!exists[key]) {\r\n        exists[key]=1;\r\n        pairings.push(pairing);\r\n      }\r\n    });\r\n  });\r\n  console.log(pairings.length)\r\n  return {\r\n    res: pairings,\r\n  };\r\n}\r\n\r\nfunction constructParentsFromCombos(combos: string[][], parent1: string[][], parent2: string[][]): {combos: string[][], parent1: string[][], parent2: string[][]} {\r\n  const nextPairs = combos.shift();\r\n  let outputParent1: string[][] = [];\r\n  let outputParent2: string[][] = [];\r\n  nextPairs?.forEach(pair => {\r\n    const half1 = pair.substr(0,2);\r\n    const half2 = pair.substr(2,2);\r\n\r\n    parent1.forEach(parent1member => {\r\n      outputParent1.push(parent1member.concat([half1]));\r\n    })\r\n    parent2.forEach(parent2member => {\r\n      outputParent2.push(parent2member.concat([half2]));\r\n    })\r\n  });\r\n  if (combos?.length===0) {\r\n    return {\r\n      combos,\r\n      parent1: outputParent1,\r\n      parent2: outputParent2,\r\n    }\r\n  }\r\n  else {\r\n    return constructParentsFromCombos(combos, outputParent1, outputParent2)\r\n  }\r\n}\r\n\r\nconst flowers = data.default.flowers;\r\nconst split_binary = /(?:[01]{2}(\\S)){2,3}[01]{2}/;\r\nconst condensed = /[\\d]{3,4}/;\r\nconst words = /(seed|island) (red|pink|yellow|orange|black|blue|purple|white)/i;\r\n\r\nexport function getColorData(species: Species, genome: string): PartialOffspring {\r\n  const genomeData: GenomeData = flowers[species]['genomes'] as GenomeData;\r\n  const data = genomeData[genome];\r\n  const colorString = getColorString(data);\r\n  const colorData = {\r\n    species,\r\n    genome,\r\n    backgroundColor: bgColors[data.color as Color],\r\n    colorDisplayString: colorString,\r\n    color: data.color,\r\n  };\r\n  return colorData;\r\n}\r\n\r\nexport function getColorString({ color, seed, island }: { color: Color, seed?: number, island?: number }): string {\r\n  let colorString = color as string;\r\n  if (island) {\r\n    colorString += \" (island)\";\r\n  }\r\n  else if (seed) {\r\n    colorString += \" (seed)\";\r\n  }\r\n  return colorString;\r\n}\r\n\r\nexport function getAlphaGenome(species: Species, genome: string): string {\r\n  const pairs = genome.split('_');\r\n  const alphas = alphaAlleles[species];\r\n  return pairs.map((pair, idx) => {\r\n    return pair.split('').map(digit => {\r\n      return alphas[idx][parseInt(digit, 2)]\r\n    }).sort().join('');\r\n  }).join('-');\r\n\r\n}\r\n\r\nexport function getOffspringData(species: Species, genome: string): Offspring {\r\n  const colorData = getColorData(species, genome);\r\n  const condensedGenome = getCondensedGenome(genome);\r\n  const alphaGenome = getAlphaGenome(species, genome);\r\n  return {\r\n    genome,\r\n    alphaGenome,\r\n    condensedGenome,\r\n    species,\r\n    ...colorData\r\n  } as Offspring;\r\n}\r\n\r\nexport function getAllOffspringForColor(species: Species, color: Color) {\r\n  let possibleGenomes = [] as Offspring[];\r\n  const allGenomes = flowers[species]['genomes'] as GenomeData;\r\n  Object.keys(allGenomes).forEach(genome => {\r\n    if (allGenomes[genome].color === color) {\r\n      possibleGenomes.push(getOffspringData(species, genome))\r\n    }\r\n  });\r\n  return possibleGenomes;\r\n}\r\n\r\n\r\nfunction parseGenomeSet(genomeSet: string, species: Species): string[][] {\r\n  const genomes = genomeSet.split(',');\r\n  let splitGenes = [] as string[][];\r\n  genomes.forEach(rawGenome => {\r\n    const genome = rawGenome.trim();\r\n    let gene = [] as string[];\r\n    let matched = 0;\r\n    if (genome.toLowerCase() in Color) {\r\n      matched = 1;\r\n      const possibleGenomes = getAllOffspringForColor(species, genome.toLowerCase() as Color);\r\n      possibleGenomes.forEach((offspring) => {\r\n        gene = offspring.genome.split('_');\r\n        splitGenes.push(gene);\r\n      })\r\n    }\r\n    if (!matched) {\r\n      const split_match = split_binary.exec(genome);\r\n      if (split_match && split_match[1]) {\r\n        matched = 1;\r\n        gene = genome.split(split_match[1]);\r\n        splitGenes.push(gene);\r\n      }\r\n    }\r\n\r\n    if (!matched) {\r\n      const condensed_match = condensed.exec(genome);\r\n      if (condensed_match && condensed_match[0]) {\r\n        matched = 1;\r\n        gene = genome.split('').map((numeral: string): string => numeral_map[parseInt(numeral, 3)])\r\n        splitGenes.push(gene);\r\n      }\r\n    }\r\n    if (!matched) {\r\n      const word_match = words.exec(genome);\r\n      if (word_match) {\r\n        const parts = genome.toLowerCase().split(' ');\r\n        const variant = parts[0];\r\n        const color = parts[1];\r\n        const variantData: VariantMap = flowers[species][variant as 'seed' | 'island'];\r\n        const variant_genome = variantData[color];\r\n        gene = variant_genome.split('_')\r\n        splitGenes.push(gene);\r\n      }\r\n    }\r\n\r\n    if (!checkGene(gene, species)) {\r\n      throw new Error(`Could not parse ${rawGenome} for species ${species}`);\r\n    }\r\n  });\r\n  return splitGenes;\r\n}\r\n\r\nfunction checkGene(gene: string[], species: Species) {\r\n  return gene.length === alphaAlleles[species].length;\r\n}\r\n\r\nexport function pickGenomeString(offspring: PartialOffspring, format: GenomeFormat): string {\r\n  switch (format) {\r\n    case GenomeFormat.binary:\r\n      return offspring.genome!;\r\n    case GenomeFormat.condensed:\r\n      return offspring.condensedGenome!;\r\n    case GenomeFormat.alpha:\r\n      return offspring.alphaGenome!;\r\n    default:\r\n      return '';\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function possibleGenomes(parent1: string, parent2: string, offspringFilter: string, species: Species): { res: Pairing[], error?: Error } {\r\n  // if (parent1 === '') {\r\n  //   return parent2;\r\n  // }\r\n  // if (parent2 === '') {\r\n  //   return parent1;\r\n  // }\r\n  // Split up the parents into their possible genes\r\n  try {\r\n    const splitGenes1 = parseGenomeSet(parent1, species);\r\n    const splitGenes2 = parseGenomeSet(parent2, species);\r\n    let filterGenomes: string[] = [];\r\n    if (offspringFilter) {\r\n      filterGenomes = parseGenomeSet(offspringFilter, species).map((gene) => { return gene.join('_') });\r\n    }\r\n\r\n\r\n    // Combine the possible genes of the parents\r\n    let childGenomesPerParents: { [key: string]: string[] } = {};\r\n    splitGenes1.forEach(genome1 => {\r\n      splitGenes2.forEach(genome2 => {\r\n        if (childGenomesPerParents[genome1.join('_') + ',' + genome2.join('_')]\r\n          || childGenomesPerParents[genome2.join('_') + ',' + genome1.join('_')]) {\r\n          return;\r\n        }\r\n        let allelesForEachGene = [] as string[][];\r\n        genome1.forEach((_item, i) => {\r\n          const geneCombo = genome1[i] + genome2[i];\r\n          allelesForEachGene.push(memoGeneCombos[geneCombo]);\r\n        })\r\n\r\n        let possibleChildGenomes = createPossibleGenomeList(allelesForEachGene);\r\n        childGenomesPerParents[genome1.join('_') + ',' + genome2.join('_')] = possibleChildGenomes;\r\n      })\r\n    });\r\n    // Massage the data to be displayed in the sheet.\r\n    let res = [] as Pairing[];\r\n    Object.keys(childGenomesPerParents).forEach(parentCombo => {\r\n      let result = {} as Pairing;\r\n      let parents = parentCombo.split(',');\r\n      result.parents = parents;\r\n      result.offspring = [];\r\n      let genomeOccurrences: { [key: string]: number } = {};\r\n      let genomeCount = 0;\r\n      childGenomesPerParents[parentCombo].forEach(childGenome => {\r\n        genomeOccurrences[childGenome] = genomeOccurrences[childGenome] ? genomeOccurrences[childGenome] + 1 : 1;\r\n        genomeCount++;\r\n      });\r\n      Object.keys(genomeOccurrences).sort().forEach(dedupedGenome => {\r\n        const offspringData = getOffspringData(species, dedupedGenome)\r\n        result.offspring.push({\r\n          probability: genomeOccurrences[dedupedGenome] / genomeCount,\r\n          ...offspringData\r\n        });\r\n      });\r\n\r\n      if (!filterGenomes.length || _.some(result.offspring, (offspring) => { return _.some(filterGenomes, (filterGenome) => { return filterGenome === offspring.genome }) })) {\r\n        res.push(result);\r\n      }\r\n    });\r\n\r\n    return { res };\r\n\r\n  } catch (e) {\r\n    return {\r\n      res: [],\r\n      error: e\r\n    }\r\n  }\r\n}\r\n\r\nfunction gcd(a: number, b: number): number {\r\n  if (b === 0) {\r\n    return a;\r\n  }\r\n  return gcd(b, a % b);\r\n};\r\n\r\nexport function getProbability({ probability }: Offspring, format: ProbabilityFormat) {\r\n  if (format === ProbabilityFormat.percentage) {\r\n    return (probability * 100) + '%';\r\n  }\r\n  else {\r\n    const divisor = gcd(probability * 256, 256);\r\n    const denominator = 256 / divisor;\r\n    return probability * denominator + ':' + denominator;\r\n  }\r\n}\r\n\r\nexport function getCondensedGenome(genome: string): string {\r\n  return genome.split('_').map(allele => { return allele.split('').reduce((a: string, b: string) => { return (parseInt(a, 2) + parseInt(b, 2)).toString() }) }).join('');\r\n}\r\n\r\nfunction createPossibleGenomeList(possibilities: string[][]): string[] {\r\n  if (possibilities.length === 1) {\r\n    return possibilities[0]\r\n  }\r\n  const heads = possibilities.shift();\r\n  const genomeTails = createPossibleGenomeList(possibilities);\r\n  let combinedGenes = [] as string[];\r\n  heads?.forEach(head => {\r\n    genomeTails.forEach(tail => {\r\n      combinedGenes.push(head + '_' + tail);\r\n    })\r\n  })\r\n\r\n  return combinedGenes;\r\n}\r\n\r\n","import React from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles, createStyles } from '@material-ui/core';\r\nimport { Species } from './enums';\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst speciesList = Object.keys(Species);\r\n\r\ninterface SpeciesSelectProps {\r\n  species: Species;\r\n  setSpecies: (species: Species) => void;\r\n}\r\n\r\nexport const SpeciesSelect = ({ species, setSpecies }: SpeciesSelectProps) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink id=\"species-select-label\">\r\n          Species\r\n            </InputLabel>\r\n        <Select\r\n          labelId=\"species-select-label\"\r\n          id=\"species-select\"\r\n          value={species}\r\n          onChange={(e: React.ChangeEvent<{ value: unknown }>) => setSpecies(e.target.value as Species)}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n        >\r\n          {\r\n            speciesList.sort().map(species => {\r\n              return <MenuItem key={species} value={species}>{species}</MenuItem>\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { Grid, TextField, Button, makeStyles, createStyles } from '@material-ui/core';\r\nimport { possibleGenomes, possibleParents } from './flowerUtils';\r\nimport { Pairing } from './types';\r\nimport { Species } from './enums';\r\nimport { SpeciesSelect } from './SpeciesSelect';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\ninterface CalculatorProps {\r\n  parent1: string;\r\n  parent2: string;\r\n  offspringFilter: string;\r\n  setParent1: (arg0: string) => void;\r\n  setParent2: (arg0: string) => void;\r\n  setOffspringFilter: (arg0: string) => void;\r\n  setErr: (err: string) => void;\r\n  setRes: (arg0: Pairing[]) => void;\r\n  species: Species;\r\n  setSpecies: (arg0: Species) => void;\r\n}\r\n\r\nexport const Calculator = ({ parent1, parent2, offspringFilter, setParent1, setParent2, setOffspringFilter, setRes, setErr, species, setSpecies }: CalculatorProps) => {\r\n  const classes = useStyles();\r\n\r\n  const handleSetSpecies = React.useCallback((species: Species) => {\r\n    setRes([] as Pairing[]);\r\n    setSpecies(species);\r\n  }, [setRes, setSpecies]);\r\n\r\n  const handleCalculate = React.useCallback((_event: React.MouseEvent): void => {\r\n    setErr('');\r\n    let result;\r\n    if (parent1 && parent2) {\r\n      result = possibleGenomes(parent1, parent2, offspringFilter, species);\r\n    }\r\n    else {\r\n      result = possibleParents(offspringFilter, species);\r\n    }\r\n    if (result.error) {\r\n      setErr(result.error.message);\r\n      setRes([]);\r\n    }\r\n    else {\r\n      setRes(result.res);\r\n    }\r\n  }, [offspringFilter, parent1, parent2, setErr, setRes, species]);\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <div>\r\n\r\n          <Grid container alignContent=\"center\" justify=\"center\" spacing={0} >\r\n            <Grid item xs={12} xl={6}>\r\n              <Grid container justify=\"center\">\r\n                <Grid item xs={12} sm={4} xl={3}>\r\n                  <TextField label=\"Parent 1\" value={parent1} onChange={event => setParent1(event.target.value)} helperText=\"e.g. 00_01_00, 010, seed red, island pink\" />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={4} xl={3}>\r\n                  <TextField label=\"Parent 2\" value={parent2} onChange={event => setParent2(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} xl={3}>\r\n                  <TextField label=\"Offspring Filter\" value={offspringFilter} onChange={event => setOffspringFilter(event.target.value)} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <SpeciesSelect species={species} setSpecies={handleSetSpecies} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={4}>\r\n              <Button variant=\"contained\" color=\"primary\" disabled={!species} onClick={handleCalculate}>Calculate</Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </div>\r\n\r\n      </form>\r\n\r\n      \r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Calculator;","import { Order } from './types';\r\n\r\n// all below from material-ui reference\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport function getComparator<Key extends keyof any>(order: Order, orderBy: Key): (a: {\r\n    [key in Key]: number | string;\r\n}, b: {\r\n    [key in Key]: number | string;\r\n}) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nexport function stableSort<T>(array: T[], comparator: (a: T, b: T) => number): T[] {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0)\r\n            return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n","import React from 'react';\r\nimport { TableHead, TableRow, TableCell, TableSortLabel, makeStyles, createStyles, Theme, Table, TableBody, Chip, Typography } from '@material-ui/core';\r\nimport { Offspring, Order  } from './types';\r\nimport { GenomeFormat, ProbabilityFormat } from './enums';\r\nimport { stableSort, getComparator } from './tableUtils';\r\nimport { pickGenomeString, getProbability } from './flowerUtils';\r\ntype SortableKey = \"genome\" | \"probability\" | \"colorDisplayString\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    offspringChip: {\r\n      width: '100%',\r\n      border: '1px solid black',\r\n      fontWeight: 'bold'\r\n    },\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }),\r\n);\r\ninterface HeadCell {\r\n  disablePadding: boolean;\r\n  sortKey: SortableKey;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\n\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: SortableKey) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  showProbability?: boolean;\r\n  showGenome?: boolean;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, order, orderBy, onRequestSort, showProbability = true, showGenome = true } = props;\r\n  const createSortHandler = (property: SortableKey) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  const headCells: HeadCell[] = [\r\n    ...(showGenome ? [{ sortKey: 'genome' as SortableKey, numeric: false, disablePadding: true, label: 'Genome' }]:[]),\r\n    { sortKey: 'colorDisplayString', numeric: false, disablePadding: false, label: 'Color' },\r\n    ...(showProbability ? [{ sortKey: 'probability' as SortableKey, numeric: true, disablePadding: false, label: 'Probability' }] : []),\r\n  ];\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.sortKey}\r\n            align='center'\r\n            padding='none'\r\n            sortDirection={orderBy === headCell.sortKey ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.sortKey}\r\n              direction={orderBy === headCell.sortKey ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.sortKey)}\r\n              hideSortIcon={true}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.sortKey ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport interface OffspringTableProps {\r\n  offspring: Offspring[],\r\n  genomeFormat: GenomeFormat,\r\n  showProbability?: boolean,\r\n  showGenome?: boolean,\r\n  probabilityFormat?: ProbabilityFormat,\r\n}\r\n\r\nexport const OffspringTable = React.memo(({ offspring, genomeFormat, showProbability = true, showGenome = true, probabilityFormat=ProbabilityFormat.percentage }: OffspringTableProps) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<SortableKey>('genome');\r\n  const handleRequestSort = (_event: React.MouseEvent<unknown>, property: SortableKey) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  return (\r\n    <Table size='small' padding='none'>\r\n      <EnhancedTableHead\r\n        classes={classes}\r\n        order={order}\r\n        orderBy={orderBy}\r\n        onRequestSort={handleRequestSort}\r\n        showProbability={showProbability}\r\n        showGenome={showGenome}\r\n      />\r\n      <TableBody>\r\n        {\r\n          stableSort(offspring, getComparator(order, orderBy)).map((possibleOffspring: Offspring) => {\r\n            return <TableRow key={possibleOffspring.genome}>\r\n              {showGenome && <TableCell align='center'>{pickGenomeString(possibleOffspring, genomeFormat)}</TableCell>}\r\n              <TableCell align='center'>\r\n                <Chip style={{ backgroundColor: possibleOffspring.backgroundColor }} className={classes.offspringChip} label={<Typography variant='subtitle2'>{possibleOffspring.colorDisplayString}</Typography>} />\r\n              </TableCell>\r\n              {showProbability && <TableCell align='center'>{getProbability(possibleOffspring, probabilityFormat)}</TableCell>}\r\n            </TableRow>\r\n          })\r\n        }\r\n      </TableBody>\r\n\r\n    </Table>\r\n  );\r\n})","import React from 'react';\r\n\r\ninterface HeaderProps {\r\n  text: string;\r\n  backgroundColor: string;\r\n  key: string;\r\n}\r\ninterface ResultsBubbleProps {\r\n  headers: HeaderProps[];\r\n  resultsTable: React.ReactElement;\r\n  cornerIcon?: React.ReactElement;\r\n}\r\nexport const Bubble = ({ headers, resultsTable, cornerIcon }: ResultsBubbleProps) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dialogue-character-wrap\">\r\n\r\n        {headers.map(({ backgroundColor, key, text }) => {\r\n          return (\r\n            <div className=\"dialogue-character\" style={{ backgroundColor }} key={key}>\r\n              <slot name=\"character\"><b>{text}</b></slot>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"dialogue\">\r\n        <div className=\"dialogue-text\">\r\n          {cornerIcon}\r\n          {resultsTable}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Bubble;\r\n","import React from 'react';\r\nimport { Grid, FormControl, InputLabel, Select, MenuItem, makeStyles, createStyles } from '@material-ui/core';\r\nimport { bgColors, Species, Color, GenomeFormat } from './enums'\r\nimport * as data from './flowers';\r\nimport {  getAllOffspringForColor } from './flowerUtils';\r\nimport { OffspringTable } from './OffspringTable';\r\nimport { SpeciesSelect } from './SpeciesSelect';\r\nimport Bubble from './Bubble';\r\nconst flowerData = data.default.flowers;\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\ninterface LookupProps {\r\n  genomeFormat: GenomeFormat;\r\n  species: Species;\r\n  setSpecies: (arg0: Species) => void;\r\n  color: Color;\r\n  setColor: (arg0: Color) => void;\r\n}\r\n\r\nexport const Lookup = ({genomeFormat, species, setSpecies, color, setColor}: LookupProps) => {\r\n  const classes = useStyles();\r\n\r\n  const possibleGenomes = getAllOffspringForColor(species, color);\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <SpeciesSelect species={species} setSpecies={setSpecies} />\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel shrink id=\"color-select-label\">\r\n              Color\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"color-select-label\"\r\n              id=\"color-select\"\r\n              value={color}\r\n              onChange={(e: React.ChangeEvent<{ value: unknown }>) => setColor(e.target.value as Color)}\r\n              displayEmpty\r\n              className={classes.selectEmpty}\r\n            >\r\n              {species &&\r\n                flowerData[species]['colors'].map(color => {\r\n                  return <MenuItem key={color} value={color}>{color}</MenuItem>\r\n                })\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container className=\"resultsContainer\" alignItems=\"flex-start\" alignContent=\"center\" justify=\"center\" spacing={0} >\r\n        <Grid item xs={12} sm={6} md={4} xl={3} component=\"div\">\r\n              <Bubble\r\n                headers={[{\r\n                  backgroundColor: bgColors[color as Color],\r\n                  key: 'key',\r\n                  text: color + ' ' + species\r\n                }]}\r\n                resultsTable={\r\n\r\n                  <OffspringTable offspring={possibleGenomes} genomeFormat={genomeFormat} showProbability={false} />\r\n                }\r\n                />\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lookup;","import React from 'react';\r\n\r\n\r\nexport const CornerIcon = ({ icon, handler }: { icon: JSX.Element, handler: () => void }) => {\r\n  return (\r\n    <span className='corner-icon' onClick={handler}>\r\n      {icon}\r\n    </span>\r\n  )\r\n}","import React from 'react';\r\nimport { getOffspringData, pickGenomeString } from './flowerUtils';\r\nimport { OffspringTable } from './OffspringTable';\r\nimport { Pairing } from './types';\r\nimport { Bubble } from './Bubble';\r\nimport { CornerIcon } from './CornerIcon';\r\nimport PieChartIcon from '@material-ui/icons/PieChartRounded';\r\n\r\n\r\ninterface ScenarioProps {\r\n  pairing: Pairing;\r\n  showChart: (pairing: Pairing) => void;\r\n}\r\n\r\n\r\nexport const Scenario = ({ pairing, showChart }: ScenarioProps) => {\r\n  const { parents, offspring, species, genomeFormat, probabilityFormat } = pairing;\r\n  const parent1Data = getOffspringData(species, parents[0]);\r\n  const parent2Data = getOffspringData(species, parents[1]);\r\n  const handleIconClick = () => {\r\n    showChart(pairing);\r\n  }\r\n  const headers = [parent1Data, parent2Data].map((parent, idx) => {\r\n    return {\r\n      text: pickGenomeString(parent, genomeFormat),\r\n      key: parent.genome+'-'+idx,\r\n      backgroundColor: parent.backgroundColor\r\n    }\r\n  })\r\n  return (\r\n    <Bubble\r\n      headers={headers}\r\n      cornerIcon={<CornerIcon handler={handleIconClick} icon={<PieChartIcon />} />}\r\n      resultsTable={<OffspringTable offspring={offspring} genomeFormat={genomeFormat} probabilityFormat={probabilityFormat} />}\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { Scenario } from './Scenario';\r\nimport { GenomeFormat, ProbabilityFormat, Species } from './enums';\r\nimport {  Pairing } from './types';\r\n\r\ninterface ResultsGridProps {\r\n  res: Pairing[];\r\n  err: string;\r\n  species: Species;\r\n  genomeFormat: GenomeFormat;\r\n  probabilityFormat: ProbabilityFormat;\r\n  showChart: (pairing: Pairing) => void;\r\n}\r\n\r\nexport const ResultsGrid = React.memo( ({res, err, species, genomeFormat, probabilityFormat, showChart} : ResultsGridProps) => {\r\n  return (\r\n    <Grid container className=\"resultsContainer\" alignItems=\"flex-start\" alignContent=\"center\" justify=\"center\" spacing={0} >\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={3} alignItems=\"flex-start\" alignContent=\"center\" justify=\"center\">\r\n            {err && <Typography color='error' variant='h6'>{err}</Typography>}\r\n            {res.map(result => (\r\n              <Grid item xs={12} sm={6} md={4} xl={3} key={result.parents.join('x')} component=\"div\">\r\n                <Scenario key={result.parents.join('x')} pairing={{ species, genomeFormat, probabilityFormat, ...result }} showChart={showChart} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Grid>\r\n  )\r\n});","import React from 'react';\r\nimport { Pairing, Offspring } from './types';\r\nimport { bgColors, Color, ProbabilityFormat, GenomeFormat } from './enums';\r\nimport { OffspringTable } from './OffspringTable';\r\nimport { getOffspringData, pickGenomeString } from './flowerUtils';\r\nimport Bubble from './Bubble';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\nimport CloseIcon from '@material-ui/icons/CloseRounded';\r\nimport { Grid } from '@material-ui/core';\r\nimport { CornerIcon } from './CornerIcon';\r\n\r\nexport const ColorBreakdown = ({ pairing, probabilityFormat, closeModal, genomeFormat }: { pairing: Pairing, probabilityFormat: ProbabilityFormat, genomeFormat: GenomeFormat, closeModal: () => void }) => {\r\n  let colors = {} as { [key in Color]: number };\r\n  pairing.offspring.forEach((offspring) => {\r\n    const color = offspring.color as Color;\r\n    colors[color] = colors[color] ? colors[color] + offspring.probability : offspring.probability;\r\n  });\r\n  const { parents, species } = pairing;\r\n  const parent1Data = getOffspringData(species, parents[0]);\r\n  const parent2Data = getOffspringData(species, parents[1]);\r\n  const headers = [parent1Data, parent2Data].map((parent) => {\r\n    return {\r\n      text: pickGenomeString(parent, genomeFormat),\r\n      key: parent.genome,\r\n      backgroundColor: parent.backgroundColor\r\n    }\r\n  })\r\n\r\n  const colorOffspring = Object.keys(colors).map((color) => {\r\n    return {\r\n      genome: color,\r\n      colorDisplayString: color,\r\n      backgroundColor: bgColors[color as Color],\r\n      color,\r\n      probability: colors[color as Color],\r\n    } as Offspring;\r\n  });\r\n\r\n  const pieData = colorOffspring.map((offspring) => {\r\n    return {\r\n      name: offspring.color,\r\n      value: offspring.probability,\r\n      color: bgColors[offspring.color as Color],\r\n    }\r\n  });\r\n\r\n  const RADIAN = Math.PI / 180;\r\n  const renderCustomizedLabel = ({\r\n    cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n  }: { [key: string]: any }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n      <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\" fontSize='12px'>\r\n        {`${(percent * 100)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  return (<>\r\n    <div className='breakdown-bubble-container'>\r\n\r\n\r\n      <Bubble\r\n        headers={headers}\r\n        cornerIcon={<CornerIcon icon={<CloseIcon />} handler={closeModal} />}\r\n        resultsTable={\r\n          <>\r\n            <Grid container>\r\n              <Grid item xs={12} md={6}>\r\n                <div className='pie-container'>\r\n                  <ResponsiveContainer>\r\n                    <PieChart>\r\n                      <Pie data={pieData} dataKey='value' label={renderCustomizedLabel} labelLine={false}>\r\n                        {\r\n                          pieData.map((entry, index) => <Cell key={`cell-${index}`} fill={pieData[index].color} />)\r\n                        }\r\n                      </Pie>\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <OffspringTable\r\n                  offspring={colorOffspring}\r\n                  showGenome={false}\r\n                  genomeFormat={GenomeFormat.binary}\r\n                  probabilityFormat={probabilityFormat}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n          </>\r\n        }\r\n      />\r\n    </div>\r\n\r\n\r\n  </>)\r\n\r\n}","import React from 'react';\r\nimport { FormControl, makeStyles, createStyles, InputLabel, Select, MenuItem } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\ninterface FormatSelectorProps {\r\n  format: string;\r\n  formatOptions: {[key: string]: string};\r\n  label: string;\r\n  setFormat: (arg0: string) => void;\r\n}\r\n\r\nexport const FormatSelector = ({format, formatOptions, label, setFormat} : FormatSelectorProps ) => {\r\n  const classes = useStyles();\r\n;\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink id=\"format-select-label\">\r\n          {label}\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"format-select-label\"\r\n          value={format}\r\n          onChange={(e: React.ChangeEvent<{ value: unknown }>) => setFormat(e.target.value as string)}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n        >\r\n          {Object.keys(formatOptions).map(format => <MenuItem key={format} value={format}>{format}</MenuItem>)\r\n\r\n          }\r\n          \r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport './bubble.scss';\nimport Calculator from './Calculator';\nimport Lookup from './Lookup';\nimport SwipeableViews from 'react-swipeable-views';\nimport { AppBar, Tabs, Tab, createMuiTheme, ThemeProvider, Modal, Backdrop } from '@material-ui/core';\nimport { purple } from '@material-ui/core/colors';\nimport { Pairing } from './types';\nimport {  GenomeFormat, ProbabilityFormat, Color, Species } from './enums';\nimport AccountTreeIcon from '@material-ui/icons/AccountTreeRounded';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport * as data from './flowers';\nimport { ResultsGrid } from './ResultGrid';\nimport { ColorBreakdown } from './ColorBreakdown';\nimport { FormatSelector } from './FormatSelector';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Quicksand',\n    fontSize: 12,\n    fontWeightBold: 'bold'\n  },\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: purple[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: '#11cb5f',\n    },\n  },\n});\n\nfunction App() {\n  const [value, setValue] = useState(0);\n  function a11yProps(index: any) {\n    return {\n      id: `scrollable-auto-tab-${index}`,\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n  }\n  const [genomeFormat, _setGenomeFormat] = useState((localStorage.getItem('acnh_calc_genome_format') || 'binary') as GenomeFormat);\n  const [probabilityFormat, _setProbabilityFormat] = useState((localStorage.getItem('acnh_calc_prob_format') || 'percentage') as ProbabilityFormat);\n  const [parent1, setParent1] = useState('');\n  const [parent2, setParent2] = useState('');\n  const [err, setErr] = useState('');\n  const [offspringFilter, setOffspringFilter] = useState('');\n  const [res, setRes] = useState([] as Pairing[]);\n  const speciesList = Object.keys(Species);\n  const [species, setSpecies] = useState(speciesList[0] as Species);\n  const [color, setColor] = useState(data.default.flowers[species]['colors'][0] as Color);\n  const [showModal, setShowModal] = useState(false);\n  const [chartPairing, setChartPairing] = useState({} as Pairing);\n\n  const updateSpecies = React.useCallback((species: Species) => {\n    setRes([] as Pairing[]);\n    setSpecies(species);\n  }, [setRes, setSpecies]);\n\n  const handleClose = () => {\n    setShowModal(false);\n  }\n\n  const showChart = React.useCallback((pairing: Pairing) => {\n    setChartPairing(pairing);\n    setShowModal(true);\n  }, [setChartPairing, setShowModal]);\n\n\n  const setProbabilityFormat = React.useCallback((format: string): void => {\n    _setProbabilityFormat(format as ProbabilityFormat);\n    localStorage.setItem('acnh_calc_prob_format', format);\n  }, [_setProbabilityFormat]);\n\n  const setGenomeFormat = React.useCallback((format: string): void => {\n    _setGenomeFormat(format as GenomeFormat);\n    localStorage.setItem('acnh_calc_genome_format', format);\n  }, [_setGenomeFormat]);\n\n  return (\n    <>\n      <link href=\"https://fonts.googleapis.com/css?family=Quicksand:400,700\" rel=\"stylesheet\" type=\"text/css\"></link>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <AppBar position=\"static\" color=\"secondary\">\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              aria-label=\"scrollable auto tabs example\"\n              centered\n            >\n              <Tab icon={<AccountTreeIcon />} {...a11yProps(0)} />\n              <Tab icon={<SearchIcon />} {...a11yProps(1)} />\n              <Tab icon={<SettingsIcon />} {...a11yProps(2)} />\n            </Tabs>\n          </AppBar>\n\n          <SwipeableViews\n            axis='x'\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <div className=\"swipeable\">\n              <Calculator\n                parent1={parent1}\n                parent2={parent2}\n                setParent1={setParent1}\n                setParent2={setParent2}\n                offspringFilter={offspringFilter}\n                setOffspringFilter={setOffspringFilter}\n                setErr={setErr}\n                setRes={setRes}\n                species={species}\n                setSpecies={updateSpecies}\n              />\n              <ResultsGrid res={res} err={err} species={species} genomeFormat={genomeFormat} probabilityFormat={probabilityFormat} showChart={showChart} />\n              <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={showModal}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                  timeout: 500,\n                }}\n              >\n                <><ColorBreakdown pairing={chartPairing} probabilityFormat={probabilityFormat} genomeFormat={genomeFormat} closeModal={handleClose} /></>\n              </Modal>\n            </div>\n            <div className=\"swipeable\">\n              <Lookup\n                genomeFormat={genomeFormat}\n                species={species}\n                setSpecies={updateSpecies}\n                color={color}\n                setColor={setColor}\n              />\n            </div>\n            <div className=\"swipeable\">\n              <FormatSelector\n                format={genomeFormat}\n                label='Genome Display'\n                formatOptions={GenomeFormat}\n                setFormat={setGenomeFormat}\n              />\n              <FormatSelector\n                format={probabilityFormat}\n                label=\"Probability Display\"\n                formatOptions={ProbabilityFormat}\n                setFormat={setProbabilityFormat}\n              />\n            </div>\n          </SwipeableViews>\n\n        </div>\n      </ThemeProvider>\n\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}