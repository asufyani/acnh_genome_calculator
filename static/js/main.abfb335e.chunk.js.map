{"version":3,"sources":["flowers.js","utils.js","Scenario.jsx","App.js","serviceWorker.js","index.js"],"names":["memoGeneCombos","numeral_map","0","1","2","flowers","data","split_binary","condensed","words","parseGenomeSet","genomeSet","species","genomes","split","splitGenes","forEach","rawGenome","genome","trim","split_match","exec","push","condensed_match","map","numeral","parts","variant","color","variant_genome","possibleGenomes","parent1","parent2","splitGenes1","splitGenes2","childGenomesPerParents","genome1","genome2","allelesForEachGene","i","length","geneCombo","possibleChildGenomes","createPossibleGenomeList","possibilities","heads","shift","genomeTails","combinedGenes","j","join","res","Object","keys","parentCombo","result","parents","offspring","genomeOccurrences","genomeCount","childGenome","sort","dedupedGenome","probability","console","log","flowerData","bgColors","Scenario","Card","CardHeader","title","CardContent","Table","size","TableHead","TableRow","TableCell","TableBody","possibleOffspring","colorData","getColorData","key","style","backgroundColor","colorString","island","seed","getColorString","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","root","width","App","useState","setParent1","setParent2","setRes","setSpecies","classes","className","noValidate","autoComplete","Grid","container","alignItems","alignContent","justify","item","xs","TextField","label","value","onChange","event","target","helperText","InputLabel","id","Select","labelId","MenuItem","Button","disabled","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.abfb335e.chunk.js","sourcesContent":["export default {\r\n    flowers: {\r\n\r\n\r\n        \"hyacinth\": {\r\n            \"seed\": {\r\n                \"yellow\": \"00_11_00\",\r\n                \"white\": \"00_00_01\",\r\n                \"red\": \"11_00_01\"\r\n            },\r\n            \"genomes\": {\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\",\r\n                    \"island\": 1\r\n                },\r\n                \"11_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"color\": \"blue\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"yellow\",\r\n                    \"seed\": 1\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"orange\",\r\n                    \"island\": 1\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                }\r\n            },\r\n            \"island\": {\r\n                \"blue\": \"11_01_00\",\r\n                \"pink\": \"01_00_01\",\r\n                \"orange\": \"01_11_00\"\r\n            }\r\n        },\r\n        \"windflower\": {\r\n            \"island\": {\r\n                \"pink\": \"11_11_01\",\r\n                \"blue\": \"01_00_11\"\r\n            },\r\n            \"seed\": {\r\n                \"red\": \"11_00_00\",\r\n                \"white\": \"00_00_01\",\r\n                \"orange\": \"00_11_00\"\r\n            },\r\n            \"genomes\": {\r\n                \"11_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"orange\",\r\n                    \"seed\": 1\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_01\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"color\": \"white\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"orange\"\r\n                }\r\n            }\r\n        },\r\n        \"mum\": {\r\n            \"seed\": {\r\n                \"white\": \"00_00_01\",\r\n                \"yellow\": \"00_11_00\",\r\n                \"red\": \"11_00_00\"\r\n            },\r\n            \"genomes\": {\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"purple\",\r\n                    \"island\": 1\r\n                },\r\n                \"11_11_01\": {\r\n                    \"color\": \"green\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"green\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"yellow\",\r\n                    \"seed\": 1\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"white\"\r\n                }\r\n            },\r\n            \"island\": {\r\n                \"purple\": \"11_01_01\",\r\n                \"pink\": \"01_01_11\"\r\n            }\r\n        },\r\n        \"lily\": {\r\n            \"island\": {\r\n                \"orange\": \"11_11_01\",\r\n                \"pink\": \"11_01_11\",\r\n                \"black\": \"11_01_00\"\r\n            },\r\n            \"genomes\": {\r\n                \"11_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_11\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_01\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                }\r\n            },\r\n            \"seed\": {\r\n                \"red\": \"11_00_01\",\r\n                \"white\": \"00_00_11\",\r\n                \"yellow\": \"00_11_00\"\r\n            }\r\n        },\r\n        \"pansy\": {\r\n            \"island\": {\r\n                \"blue\": \"01_00_11\",\r\n                \"orange\": \"11_11_01\"\r\n            },\r\n            \"seed\": {\r\n                \"yellow\": \"00_11_00\",\r\n                \"white\": \"00_00_01\",\r\n                \"red\": \"11_00_00\"\r\n            },\r\n            \"genomes\": {\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"blue\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_01\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"orange\"\r\n                }\r\n            }\r\n        },\r\n        \"rose\": {\r\n            \"seed\": {\r\n                \"yellow\": \"00_11_00_00\",\r\n                \"white\": \"00_00_01_00\",\r\n                \"red\": \"11_00_00_01\"\r\n            },\r\n            \"genomes\": {\r\n                \"11_00_01_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_01_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_11_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_11_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_00_00_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_00_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_11_11_00\": {\r\n                    \"color\": \"blue\"\r\n                },\r\n                \"11_11_00_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_01_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_01_00_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_00_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_01_11_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_11_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_01_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_00_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_00_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_11_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_11_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_00_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_00_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_01_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_11_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_01_01_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_00_11_11\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_01_00_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_11_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_11_11_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_11_00_00\": {\r\n                    \"color\": \"yellow\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_11_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_01_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_11_00_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_11_11_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_11_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_00_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_01_01_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_00_01_00\": {\r\n                    \"color\": \"white\",\r\n                    \"seed\": 1\r\n                },\r\n                \"00_01_01_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_11_01_01\": {\r\n                    \"color\": \"orange\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_01_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"01_11_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_11_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_11_00_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_00_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_11_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_00_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"11_00_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_11_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_11_11_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_00_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_00_01_01\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_11_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_01_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_00_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_01_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_11_00_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_11_11_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_01_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_00_11_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"01_00_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_00_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_00_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_01_00_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_11_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_11_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_01_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_11_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_01_11\": {\r\n                    \"color\": \"white\"\r\n                }\r\n            },\r\n            \"island\": {\r\n                \"orange\": \"11_11_01_01\",\r\n                \"pink\": \"11_00_11_11\"\r\n            }\r\n        },\r\n        \"tulip\": {\r\n            \"genomes\": {\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_11_01\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"yellow\",\r\n                    \"seed\": 1\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"purple\"\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"island\": 1,\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"color\": \"white\",\r\n                    \"seed\": 1\r\n                }\r\n            },\r\n            \"seed\": {\r\n                \"yellow\": \"00_11_00\",\r\n                \"white\": \"00_00_01\",\r\n                \"red\": \"11_00_01\"\r\n            },\r\n            \"island\": {\r\n                \"black\": \"11_01_00\",\r\n                \"orange\": \"01_11_00\",\r\n                \"pink\": \"01_00_01\"\r\n            }\r\n        },\r\n        \"cosmos\": {\r\n            \"island\": {\r\n                \"orange\": \"11_01_01\",\r\n                \"pink\": \"01_01_11\"\r\n            },\r\n            \"genomes\": {\r\n                \"01_11_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"00_00_01\": {\r\n                    \"color\": \"white\",\r\n                    \"seed\": 1\r\n                },\r\n                \"01_01_01\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_01\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_11\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_00\": {\r\n                    \"color\": \"red\",\r\n                    \"seed\": 1\r\n                },\r\n                \"00_00_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_11\": {\r\n                    \"color\": \"pink\",\r\n                    \"island\": 1\r\n                },\r\n                \"00_00_00\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"01_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_00_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"01_11_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_11_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_11_11\": {\r\n                    \"color\": \"red\"\r\n                },\r\n                \"00_01_00\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_00\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"01_00_11\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_01_11\": {\r\n                    \"color\": \"white\"\r\n                },\r\n                \"11_11_00\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_11_11\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"11_01_00\": {\r\n                    \"color\": \"orange\"\r\n                },\r\n                \"11_01_01\": {\r\n                    \"color\": \"orange\",\r\n                    \"island\": 1\r\n                },\r\n                \"11_11_01\": {\r\n                    \"color\": \"black\"\r\n                },\r\n                \"00_01_01\": {\r\n                    \"color\": \"yellow\"\r\n                },\r\n                \"01_00_01\": {\r\n                    \"color\": \"pink\"\r\n                },\r\n                \"00_11_01\": {\r\n                    \"seed\": 1,\r\n                    \"color\": \"yellow\"\r\n                }\r\n            },\r\n            \"seed\": {\r\n                \"red\": \"11_00_00\",\r\n                \"yellow\": \"00_11_01\",\r\n                \"white\": \"00_00_01\"\r\n            }\r\n        }\r\n    }\r\n}","import * as data from './flowers';\r\nconst memoGeneCombos = {\r\n    '0000': ['00'],\r\n    '0001': ['00','01'],\r\n    '0011': ['01'],\r\n    '0100': ['00','01'],\r\n    '0101': ['00', '01', '01', '11'],\r\n    '0111': ['01', '11'],\r\n    '1100': ['01'],\r\n    '1101': ['01', '11'],\r\n    '1111': ['11']\r\n  };\r\n\r\n  const numeral_map = {\r\n    0 : '00',\r\n    1 : '01',\r\n    2 : '11'\r\n  }\r\n\r\n  const flowers = data.default.flowers;\r\n  const split_binary = /(?:[01]{2}(\\S)){2,3}[01]{2}/;\r\n  const condensed = /[\\d]{3,4}/;\r\n  const words = /(seed|island) (red|pink|yellow|orange|black|blue|purple|white)/;\r\n\r\n  function parseGenomeSet(genomeSet, species) {\r\n    const genomes = genomeSet.split(',');\r\n    let splitGenes = [];\r\n    genomes.forEach(rawGenome => {\r\n      const genome = rawGenome.trim();\r\n      const split_match = split_binary.exec(genome);\r\n      if (split_match && split_match[1]) {\r\n        splitGenes.push(genome.split(split_match[1]));\r\n      }\r\n      const condensed_match = condensed.exec(genome);\r\n      if (!split_match && condensed_match && condensed_match[0]) {\r\n        splitGenes.push(genome.split('').map(numeral => numeral_map[numeral]));\r\n      }\r\n      const word_match = words.exec(genome);\r\n      if (word_match) {\r\n        const parts = genome.split(' ');\r\n        const variant = parts[0];\r\n        const color = parts[1];\r\n        const variant_genome = flowers[species][variant][color];\r\n        splitGenes.push(variant_genome.split('_'));\r\n      }\r\n    });\r\n    return splitGenes;\r\n  }\r\n  \r\n  export function possibleGenomes(parent1, parent2, species) {\r\n    if (parent1 === '') {\r\n      return parent2;\r\n    }\r\n    if (parent2 === '') {\r\n      return parent1;\r\n    }\r\n    // Split up the parents into their possible genes\r\n    const splitGenes1 = parseGenomeSet(parent1, species);\r\n    const splitGenes2 = parseGenomeSet(parent2, species);\r\n    \r\n    // Combine the possible genes of the parents\r\n    let childGenomesPerParents = {};\r\n    splitGenes1.forEach(genome1 => {\r\n      splitGenes2.forEach(genome2 => {\r\n        let allelesForEachGene = [];\r\n        for (let i = 0; i < genome1.length; i++) {\r\n          const geneCombo = genome1[i] + genome2[i];\r\n          allelesForEachGene.push(memoGeneCombos[geneCombo]);\r\n        }\r\n        let possibleChildGenomes = createPossibleGenomeList(allelesForEachGene);\r\n        childGenomesPerParents[genome1.join('_')+','+genome2.join('_')] = possibleChildGenomes;\r\n      })\r\n    });\r\n    // Massage the data to be displayed in the sheet.\r\n    let res = [];\r\n    Object.keys(childGenomesPerParents).forEach(parentCombo => {\r\n      let result = {};\r\n      let parents = parentCombo.split(',');\r\n      result.parents = parents;\r\n      result.offspring = [];\r\n      let genomeOccurrences = {};\r\n      let genomeCount = 0;\r\n      childGenomesPerParents[parentCombo].forEach(childGenome => {\r\n        genomeOccurrences[childGenome] = genomeOccurrences[childGenome] ? genomeOccurrences[childGenome] + 1 : 1;\r\n        genomeCount++;\r\n      });\r\n      Object.keys(genomeOccurrences).sort().forEach(dedupedGenome => {\r\n        result.offspring.push({\r\n          genome: dedupedGenome,\r\n          probability:  genomeOccurrences[dedupedGenome]/genomeCount\r\n        });\r\n      });\r\n      res.push(result);\r\n    });\r\n    console.log(res);\r\n    return res;\r\n  }\r\n  \r\n  export function createPossibleGenomeList(possibilities) {\r\n    if (possibilities.length === 1) {\r\n      return possibilities[0]\r\n    }\r\n    const heads = possibilities.shift();\r\n    const genomeTails = createPossibleGenomeList(possibilities);\r\n    let combinedGenes = [];\r\n    for (let i = 0; i < heads.length; i++) {\r\n      for (let j = 0; j < genomeTails.length; j++) {\r\n        combinedGenes.push(heads[i] + '_' + genomeTails[j]);\r\n      }\r\n    }\r\n    return combinedGenes;\r\n  }\r\n  \r\n  ","import React from 'react';\r\nimport { Card, CardContent, CardHeader, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport * as data from './flowers';\r\n\r\n\r\n\r\nconst flowerData = data.default.flowers;\r\n\r\nfunction getColorData(possibleOffspring, species) {\r\n   return flowerData[species]['genomes'][possibleOffspring.genome];\r\n}\r\n\r\nfunction getColorString(colorData) {\r\n    let colorString = colorData.color;\r\n    if (colorData.island) {\r\n        colorString += \" (island)\";\r\n    }\r\n    else if (colorData.seed) {\r\n        colorString += \" (seed)\";\r\n    }\r\n    return colorString;\r\n}\r\n\r\nconst bgColors = {\r\n    \"black\": '#666',\r\n    \"blue\": '#36f',\r\n    \"orange\": '#f93',\r\n    \"red\": \"#f33\",\r\n    \"yellow\": \"#ff3\",\r\n    \"purple\": \"#63f\",\r\n    \"green\": \"#9c0\",\r\n    \"pink\": \"#f9f\",\r\n    \"white\": \"#fff\",\r\n}\r\n\r\n\r\nexport const Scenario = ({parents, offspring, species}) => {\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                title={parents[0]  +' x '+ parents[1]}\r\n            />\r\n            \r\n            <CardContent>\r\n                <Table size='small'>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Genome</TableCell>\r\n                            <TableCell>Color</TableCell>\r\n                            <TableCell>Probability</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {offspring.map(possibleOffspring => {\r\n                            const colorData = getColorData(possibleOffspring, species);\r\n                            return <TableRow key={possibleOffspring.genome}>\r\n                                <TableCell>{possibleOffspring.genome}</TableCell>\r\n                                <TableCell style={ { backgroundColor: bgColors[colorData.color] } }>{getColorString(colorData)}</TableCell>\r\n                                <TableCell>{possibleOffspring.probability*100+'%'}</TableCell>\r\n                            </TableRow>\r\n                        })}\r\n                    </TableBody>\r\n                   \r\n                </Table>\r\n            </CardContent>\r\n            \r\n        </Card>\r\n    )\r\n}","import React, { useState } from 'react';\nimport { possibleGenomes } from './utils';\nimport { Scenario } from './Scenario';\nimport { Button, InputLabel, TextField, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport * as data from './flowers';\nimport './App.css';\nconst useStyles = makeStyles((theme) =>\n\n\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }))\n  ;\n\nfunction App() {\n  const [parent1, setParent1] = useState('');\n  const [parent2, setParent2] = useState('');\n  const [res, setRes] = useState([]);\n  const [species, setSpecies] = useState('');\n  const classes = useStyles();\n  const flowerData = data.default.flowers;\n  return (\n    <>\n      <div className=\"App\">\n\n\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <div>\n\n            <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\" spacing={0}>\n              <Grid item xs={6}>\n                <Grid container>\n                  <Grid item xs>\n                    <TextField label=\"Parent 1\" value={parent1} onChange={event => setParent1(event.target.value)} helperText=\"e.g. 00_01_00, 010, seed red, island pink\" />\n                  </Grid>\n                  <Grid item xs>\n                    <TextField label=\"Parent 2\" value={parent2} onChange={event => setParent2(event.target.value)} />\n                  </Grid>\n                  <Grid item xs>\n                    <InputLabel id=\"species-select-label\">Species</InputLabel>\n                    <Select\n                      labelId=\"species-select-label\"\n                      id=\"species-select\"\n                      value={species}\n                      onChange={event => { setSpecies(event.target.value); setRes([]); }}\n                    >\n                      {\n                        Object.keys(flowerData).map(species => {\n                          return <MenuItem key={species} value={species}>{species}</MenuItem>\n                        })\n                      }\n                    </Select><br />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n\n                <Grid container justify=\"center\">\n                  <Grid item>\n                    <Button variant=\"contained\" color=\"primary\" disabled={!species} onClick={event => { setRes(possibleGenomes(parent1, parent2, species)) }}>Calculate</Button>\n\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n\n          </div>\n\n        </form>\n\n      </div>\n\n\n        <Grid container className=\"resultsContainer\" spacing={3} alignItems=\"center\" alignContent=\"center\" justify=\"center\">\n          <Grid item xs={10}>\n            <Grid container spacing={3} alignItems=\"flex-start\" alignContent=\"center\" justify=\"center\">\n              {res.map(result => (\n                <Grid item xs={3} key={result.parents}>\n                  <Scenario key={result.parents} parents={result.parents} offspring={result.offspring} species={species} />\n                </Grid>\n              ))}\n            </Grid>\n\n          </Grid>\n        </Grid>\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}